\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 24 21:05:15 UYT 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../Desktop/programming_logic_with_key/key/src/main/java/com/key";

\proofObligation "#Proof Obligation Settings
#Wed Nov 24 21:05:15 UYT 2021
contract=com.key.BinarySearch[com.key.BinarySearch\\:\\:binarySearch([I,int)].JML normal_behavior operation contract.0
name=com.key.BinarySearch[com.key.BinarySearch\\:\\:binarySearch([I,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "matiashrnndz" ) (keyVersion "3ddfc1d216"))
(keyLog "1" (keyUser "matiashrnndz" ) (keyVersion "3ddfc1d216"))

(autoModeTime "2615")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "a,key,result_21,exc_25,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "6") (term "0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
 (builtin "One Step Simplification" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "1,0,0"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "0,0,1,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "4") (term "0,0"))
(rule "nnf_notAnd" (formula "4") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "4") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "4") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "4") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "4") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "4") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "4") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "4") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0,0"))
(rule "nnf_imp2or" (formula "6") (term "0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "commute_or_2" (formula "4") (term "0,0,0"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_binarySearch,savedHeapBefore_binarySearch,_aBefore_binarySearch,_keyBefore_binarySearch"))
 (builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "low"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "high"))
(rule "assignment_read_length" (formula "6"))
(branch "Normal Execution (_a != null)"
    (builtin "One Step Simplification" (formula "6"))
   (rule "loopScopeInvDia" (formula "6") (term "1") (newnames "low_0,high_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
   (branch "Invariant Initially Valid"
       (builtin "One Step Simplification" (formula "6"))
      (rule "leq_literals" (formula "6") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
      (rule "polySimp_pullOutFactor1" (formula "6") (term "0,1,0,0"))
      (rule "add_literals" (formula "6") (term "1,0,1,0,0"))
      (rule "times_zero_1" (formula "6") (term "0,1,0,0"))
      (rule "qeq_literals" (formula "6") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1"))
      (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "6") (term "1,1,0,0,1,0"))
      (rule "nnf_imp2or" (formula "6") (term "0,1"))
      (rule "nnf_imp2or" (formula "6") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "6") (term "0,0,1"))
      (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0,1"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0,1"))
      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "6") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,1"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "nnf_notAnd" (formula "6") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1"))
      (rule "mul_literals" (formula "6") (term "1,0,0,0,1"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "inEqSimp_geqRight" (formula "6"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "arrayLengthNotNegative" (formula "5") (term "1,1,0,0,0,0"))
      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
      (rule "qeq_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "closeFalse" (formula "5"))
   )
   (branch "Invariant Preserved and Used"
       (builtin "One Step Simplification" (formula "7"))
      (rule "translateJavaSubInt" (formula "7") (term "0,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "7") (term "0,1,1,0,1"))
      (rule "impRight" (formula "7"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "eqSymm" (formula "12") (term "0,0,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "12") (term "0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_commuteLeq" (formula "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
      (rule "times_zero_1" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "nnf_imp2or" (formula "6") (term "0"))
      (rule "nnf_imp2or" (formula "5") (term "0"))
      (rule "nnf_notAnd" (formula "6") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,1,1,0,1"))
      (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,1,1,0,1"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0,0,1,1,0,1"))
      (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,0,1,1,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0,0,0,0"))
      (rule "arrayLengthIsAnInt" (formula "12") (term "1,1,0,0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x_2"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
      (rule "less_than_comparison_simple" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0"))
      (rule "ifElseSplit" (formula "14"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "mid"))
         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
         (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
         (rule "add_literals" (formula "4") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "4") (term "1,0,0"))
         (rule "add_zero_right" (formula "4") (term "0,0"))
         (rule "qeq_literals" (formula "4") (term "0"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
         (rule "times_zero_1" (formula "3") (term "0,0"))
         (rule "add_zero_left" (formula "3") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
         (rule "mul_literals" (formula "3") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "3"))
         (rule "leq_literals" (formula "2") (term "0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "compound_division_1" (formula "14") (term "1") (inst "#v=x_2"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_3"))
         (rule "remove_parentheses_right" (formula "14") (term "1"))
         (rule "assignmentAdditionInt" (formula "14") (term "1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,1,0"))
         (rule "assignmentDivisionInt" (formula "14"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "14"))
            (rule "translateJavaDivInt" (formula "14") (term "0,1,0"))
            (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x_2"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
            (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_5"))
            (rule "assignment" (formula "14") (term "1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_6"))
            (rule "assignment_array2" (formula "14"))
            (branch "Normal Execution (_a != null)"
                (builtin "One Step Simplification" (formula "14"))
               (rule "less_than_comparison_simple" (formula "14") (term "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
               (rule "ifElseSplit" (formula "14"))
               (branch "if x_4 true"
                   (builtin "One Step Simplification" (formula "15"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "assignment" (formula "15") (term "1"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "blockEmpty" (formula "15") (term "1"))
                  (rule "lsContinue" (formula "15") (term "1"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "4")) (ifInst ""  (formula "6")))
                  (rule "polySimp_addComm0" (formula "15") (term "0,1"))
                  (rule "precOfInt" (formula "15") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,1"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,1,1"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1,1"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1,1"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1"))
                  (rule "times_zero_2" (formula "15") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,1"))
                  (rule "commute_and" (formula "15") (term "1"))
                  (rule "jdiv_axiom" (formula "1") (term "0,2,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(low_0, Z(neglit(1(#))))"))
                  (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,2,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(high_0, Z(neglit(1(#))))"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
                  (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,2,0"))
                  (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,1,1,2,0"))
                  (rule "add_literals" (formula "1") (term "1,0,0,1,1,1,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,1,2,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,2,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
                  (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                  (rule "equal_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1,1,1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "3") (term "1"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                  (rule "add_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_homoInEq0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                  (rule "applyEqRigid" (formula "4") (term "0,1,2,0") (ifseqformula "1"))
                  (rule "polySimp_addComm1" (formula "4") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,2,0"))
                  (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                  (rule "mul_literals" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "2") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor3b" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)") (inst "elimGcdLeftDiv=high_0") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "2") (term "0,0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "leq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                  (rule "mul_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                  (rule "leq_literals" (formula "8") (term "0,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "cut_direct" (formula "22") (term "0,0,0"))
                  (branch "CUT: jdiv(high_0 + low_0, 2) >= low_0 TRUE"
                      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                     (rule "ifthenelse_split" (formula "6") (term "0"))
                     (branch "low_0 >= high_0 * -1 TRUE"
                        (rule "eqSymm" (formula "7"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_commuteGeq" (formula "1"))
                        (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "24") (term "1"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                        (rule "applyEqRigid" (formula "24") (term "1,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "24") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "7"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                        (rule "mul_literals" (formula "24") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                        (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "add_zero_left" (formula "13") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "4") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_pullOutFactor2" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "6") (term "1,1,0"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                        (rule "polySimp_pullOutFactor3b" (formula "7") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "13"))
                        (rule "greater_literals" (formula "7") (term "0,0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1,0"))
                        (rule "leq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "12"))
                        (rule "mul_literals" (formula "6") (term "1,1,0"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "cut_direct" (formula "25") (term "0"))
                        (branch "CUT: a.length >= quotient_0 TRUE"
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=k_0"))
                           (rule "orRight" (formula "26"))
                           (rule "orRight" (formula "26"))
                           (rule "notRight" (formula "28"))
                           (rule "inEqSimp_geqRight" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "28"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "allLeft" (formula "21") (inst "t=k_0"))
                           (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1"))
                           (rule "leq_literals" (formula "21") (term "0,1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "allLeft" (formula "28") (inst "t=k_0"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                           (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "allLeft" (formula "28") (inst "t=quotient_0"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1"))
                           (rule "leq_literals" (formula "28") (term "0,1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                        (branch "CUT: a.length >= quotient_0 FALSE"
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "false_right" (formula "26"))
                           (rule "inEqSimp_geqRight" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "23"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "4"))
                           (rule "andLeft" (formula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_zero_right" (formula "15") (term "0"))
                           (rule "leq_literals" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                     )
                     (branch "low_0 >= high_0 * -1 FALSE"
                        (rule "eqSymm" (formula "6"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                        (rule "applyEqRigid" (formula "24") (term "0,1") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "24") (term "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1"))
                        (rule "polySimp_mulAssoc" (formula "24") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                        (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "24") (term "1,0,0") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "24") (term "1,1,0,0,0,1,0") (ifseqformula "7"))
                        (rule "polySimp_addAssoc" (formula "24") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                  )
                  (branch "CUT: jdiv(high_0 + low_0, 2) >= low_0 FALSE"
                      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                     (rule "false_right" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "ifthenelse_split" (formula "6") (term "0"))
                     (branch "low_0 >= high_0 * -1 TRUE"
                        (rule "eqSymm" (formula "7"))
                        (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "11"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor3b" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "12"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1,0"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "low_0 >= high_0 * -1 FALSE"
                        (rule "eqSymm" (formula "6"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "7"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
               (branch "if x_4 false"
                   (builtin "One Step Simplification" (formula "15"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "13"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "elim_double_block_2" (formula "15") (term "1"))
                  (rule "jdiv_axiom" (formula "1") (term "0,2,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(low_0, Z(neglit(1(#))))"))
                  (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,2,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(high_0, Z(neglit(1(#))))"))
                  (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,2,0"))
                  (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,1,1,2,0"))
                  (rule "add_literals" (formula "1") (term "1,0,0,0,1,1,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,2,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,2,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,2,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,2,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
                  (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x_2"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_7"))
                  (rule "compound_greater_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_8"))
                  (rule "assignment" (formula "16") (term "1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_9"))
                  (rule "assignment_array2" (formula "16"))
                  (branch "Normal Execution (_a != null)"
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "greater_than_comparison_simple" (formula "16") (term "1"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_gtToGeq" (formula "16") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
                     (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "applyEqRigid" (formula "4") (term "0,1,2,0") (ifseqformula "1"))
                     (rule "polySimp_addComm1" (formula "4") (term "2,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,2,0"))
                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)") (inst "elimGcdLeftDiv=high_0") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "2") (term "0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "leq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                     (rule "mul_literals" (formula "8") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "ifElseSplit" (formula "22"))
                     (branch "if x_7 true"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "elim_double_block_2" (formula "22") (term "1"))
                        (rule "assignmentAdditionInt" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                        (rule "blockEmpty" (formula "22") (term "1"))
                        (rule "lsContinue" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "12")) (ifInst ""  (formula "14")))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
                        (rule "precOfInt" (formula "22") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,0,1,1"))
                        (rule "polySimp_pullOutFactor2" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "22") (term "1,0,0,0,1,1"))
                        (rule "times_zero_1" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,1"))
                        (rule "times_zero_2" (formula "22") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                        (rule "ifthenelse_split" (formula "6") (term "0"))
                        (branch "low_0 >= high_0 * -1 TRUE"
                           (rule "eqSymm" (formula "7"))
                           (rule "applyEqRigid" (formula "23") (term "0,0,1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "23") (term "0,1,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                           (rule "applyEqRigid" (formula "23") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "applyEqRigid" (formula "1") (term "0,2,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "23") (term "0,1,1") (ifseqformula "7"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1"))
                           (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                           (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "23") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                           (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor3b" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "11"))
                           (rule "greater_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1,0"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                           (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_zero_right" (formula "6") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "mul_literals" (formula "6") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "10"))
                           (rule "greater_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "leq_literals" (formula "6") (term "0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "cut_direct" (formula "23") (term "1"))
                           (branch "CUT: low_0 <= quotient_0 TRUE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "allRight" (formula "24") (inst "sk=k_0"))
                              (rule "orRight" (formula "24"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "26"))
                              (rule "inEqSimp_leqRight" (formula "25"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "16"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "10") (term "1,1,0"))
                              (rule "greater_literals" (formula "10") (term "0,0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "allLeft" (formula "19") (inst "t=k_0"))
                              (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "19") (term "0,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "20"))
                              (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "polySimp_mulAssoc" (formula "12") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                              (rule "polySimp_pullOutFactor2" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_zero_right" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "allLeft" (formula "29") (inst "t=quotient_0"))
                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "commute_or_2" (formula "29") (term "0,0"))
                              (rule "commute_or_2" (formula "29") (term "0"))
                              (rule "cut_direct" (formula "29") (term "1,0"))
                              (branch "CUT: a.length <= quotient_0 TRUE"
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                 (rule "times_zero_1" (formula "28") (term "0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "29"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "7"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "CUT: a.length <= quotient_0 FALSE"
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_leqRight" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "allLeft" (formula "30") (inst "t=k_0"))
                                 (rule "inEqSimp_commuteLeq" (formula "30") (term "1"))
                                 (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                 (rule "leq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "30"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "CUT: low_0 <= quotient_0 FALSE"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "inEqSimp_leqRight" (formula "23"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "low_0 >= high_0 * -1 FALSE"
                           (rule "eqSymm" (formula "6"))
                           (rule "inEqSimp_geqRight" (formula "21"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "applyEqRigid" (formula "23") (term "0,1,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                           (rule "applyEqRigid" (formula "23") (term "0,1,1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,1,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,1,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,1,1"))
                           (rule "add_zero_right" (formula "23") (term "0,1,1"))
                           (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "23") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                           (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,1,1,0,0,1,0"))
                           (rule "applyEqRigid" (formula "23") (term "0,0,1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,1"))
                           (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "23") (term "1,1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1,1"))
                           (rule "qeq_literals" (formula "23") (term "0,1,1"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "12") (term "0,0"))
                           (rule "add_zero_left" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "10"))
                           (rule "qeq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "closeFalse" (formula "12"))
                        )
                     )
                     (branch "if x_7 false"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "blockReturn" (formula "23") (term "1"))
                        (rule "blockReturn" (formula "23") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "7"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,0"))
                        (rule "times_zero_1" (formula "7") (term "0"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "lsReturnNonVoid" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallReturn" (formula "22") (term "1"))
                        (rule "assignment" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "methodCallEmpty" (formula "22") (term "1"))
                        (rule "tryEmpty" (formula "22") (term "1"))
                        (rule "emptyModality" (formula "22") (term "1"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
                        (rule "andRight" (formula "22"))
                        (branch "Case 1"
                           (rule "impRight" (formula "22"))
                           (rule "inEqSimp_geqRight" (formula "23"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "22") (term "0,0"))
                           (rule "add_zero_left" (formula "22") (term "0"))
                           (rule "ifthenelse_split" (formula "8") (term "0"))
                           (branch "low_0 >= high_0 * -1 TRUE"
                              (rule "eqSymm" (formula "9"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_commuteGeq" (formula "15"))
                              (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "14"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "low_0 >= high_0 * -1 FALSE"
                              (rule "eqSymm" (formula "8"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                              (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0"))
                              (rule "applyEq" (formula "2") (term "1") (ifseqformula "9"))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "12"))
                              (rule "leq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "Case 2"
                           (rule "impRight" (formula "22"))
                           (rule "allRight" (formula "23") (inst "sk=i_0"))
                           (rule "orRight" (formula "23"))
                           (rule "orRight" (formula "23"))
                           (rule "notRight" (formula "25"))
                           (rule "inEqSimp_leqRight" (formula "24"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "4"))
                           (rule "ifEqualsInteger" (formula "10"))
                           (rule "polySimp_homoEq" (formula "10") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "10") (term "0,0,1,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "10") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradEq7" (formula "10") (term "1,0") (ifseqformula "12"))
                           (rule "add_zero_left" (formula "10") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "10") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "andLeft" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "inEqSimp_geqRight" (formula "25"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                           (rule "polySimp_pullOutFactor3b" (formula "12") (term "0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "add_zero_left" (formula "12") (term "0,0"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,0"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "11"))
                           (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEqRigid" (formula "7") (term "1,0,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                           (rule "add_literals" (formula "7") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "7") (term "1,0,0"))
                           (rule "add_zero_right" (formula "7") (term "0,0"))
                           (rule "applyEqRigid" (formula "5") (term "1,0,0") (ifseqformula "11"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                           (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,1,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0"))
                           (rule "add_zero_right" (formula "9") (term "0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                           (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                           (rule "add_literals" (formula "9") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                     )
                  )
                  (branch "Null Reference (_a = null)"
                      (builtin "One Step Simplification" (formula "17"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_a != null, but mid Out of Bounds!)"
                     (rule "false_right" (formula "17"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "commute_or" (formula "1"))
                     (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_0"))
                     (rule "qeq_literals" (formula "2") (term "0,1,1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "equal_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,1,1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "5") (term "2,0"))
                     (rule "polySimp_addComm0" (formula "5") (term "0,2,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor3b" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)") (inst "elimGcdLeftDiv=high_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "leq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0,1,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "ifthenelse_split" (formula "6") (term "0"))
                     (branch "low_0 >= high_0 * -1 TRUE"
                        (rule "eqSymm" (formula "7"))
                        (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "7"))
                        (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "7"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,1,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0"))
                        (rule "add_zero_right" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "6") (term "1,1,0"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "9"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                        (rule "polySimp_pullOutFactor3b" (formula "6") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "12"))
                        (rule "mul_literals" (formula "6") (term "1,1,0"))
                        (rule "greater_literals" (formula "6") (term "0,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "leq_literals" (formula "6") (term "0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "3"))
                        (rule "andLeft" (formula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "14"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0"))
                        (rule "add_zero_right" (formula "14") (term "0"))
                        (rule "leq_literals" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch "low_0 >= high_0 * -1 FALSE"
                        (rule "eqSymm" (formula "6"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                        (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "5") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,1,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "polySimp_addComm0" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "inEqSimp_contradInEq5" (formula "5") (ifseqformula "11"))
                        (rule "greater_literals" (formula "5") (term "0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "times_zero_1" (formula "5") (term "1,0"))
                        (rule "qeq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "closeFalse" (formula "5"))
                     )
                  )
               )
            )
            (branch "Null Reference (_a = null)"
               (rule "false_right" (formula "15"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_a != null, but mid Out of Bounds!)"
               (rule "false_right" (formula "15"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "commute_or" (formula "1"))
               (rule "jdiv_axiom" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,2,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(low_0, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
               (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(high_0, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
               (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,2,0"))
               (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,1,1,2,0"))
               (rule "add_literals" (formula "1") (term "1,0,0,0,1,1,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
               (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_0"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
               (rule "qeq_literals" (formula "1") (term "0,1,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "equal_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_addComm1" (formula "3") (term "1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "4") (term "0,1,2,0") (ifseqformula "1"))
               (rule "polySimp_addComm1" (formula "4") (term "2,0"))
               (rule "polySimp_addComm0" (formula "4") (term "0,2,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
               (rule "times_zero_1" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
               (rule "polySimp_elimOne" (formula "8") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor3b" (formula "2") (term "0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)") (inst "elimGcdLeftDiv=high_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "2") (term "0,0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
               (rule "mul_literals" (formula "8") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0"))
               (rule "add_literals" (formula "8") (term "0,0"))
               (rule "add_zero_left" (formula "8") (term "0"))
               (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
               (rule "leq_literals" (formula "8") (term "0,0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0"))
               (rule "leq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0"))
               (rule "mul_literals" (formula "2") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "add_literals" (formula "2") (term "0,0,0"))
               (rule "add_zero_left" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor0" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "ifthenelse_split" (formula "5") (term "0"))
               (branch "low_0 >= high_0 * -1 TRUE"
                  (rule "eqSymm" (formula "6"))
                  (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "6"))
                  (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "7") (term "0,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "20") (term "0,0"))
                  (rule "add_zero_left" (formula "20") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "7"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "2"))
                  (rule "andLeft" (formula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0"))
                  (rule "add_zero_right" (formula "13") (term "0"))
                  (rule "leq_literals" (formula "13"))
                  (rule "closeFalse" (formula "13"))
               )
               (branch "low_0 >= high_0 * -1 FALSE"
                  (rule "eqSymm" (formula "5"))
                  (rule "inEqSimp_geqRight" (formula "21"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "6"))
                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "4") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "inEqSimp_contradInEq5" (formula "4") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "4") (term "1,1,0"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "14"))
            (rule "equal_literals" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "13"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "4"))
         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,0"))
         (rule "times_zero_1" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "applyEqRigid" (formula "15") (term "0,0,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "6") (term "1,1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "3"))
         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,0"))
         (rule "times_zero_1" (formula "3") (term "0"))
         (rule "qeq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "13") (term "0,1,0,1,1,0") (ifseqformula "1"))
         (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1,1,0"))
         (rule "add_literals" (formula "13") (term "1,0,1,1,0"))
         (rule "times_zero_1" (formula "13") (term "0,1,1,0"))
         (rule "elim_double_block_2" (formula "13") (term "1"))
         (rule "blockBreak" (formula "13") (term "1"))
         (rule "lsBreak" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallReturn" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "tryEmpty" (formula "13") (term "1"))
         (rule "emptyModality" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "add_literals" (formula "13") (term "1,0,1,0"))
         (rule "qeq_literals" (formula "13") (term "0,0"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")))
         (rule "allRight" (formula "13") (inst "sk=i_0"))
         (rule "orRight" (formula "13"))
         (rule "orRight" (formula "13"))
         (rule "notRight" (formula "15"))
         (rule "inEqSimp_leqRight" (formula "14"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_geqRight" (formula "15"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "allLeft" (formula "7") (inst "t=i_0"))
         (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "7") (term "0,0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "allLeft" (formula "9") (inst "t=i_0"))
         (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
         (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "9") (term "0,0,1"))
         (rule "leq_literals" (formula "9") (term "0,1"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "7"))
         (rule "andLeft" (formula "9"))
         (rule "inEqSimp_homoInEq1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "times_zero_1" (formula "9") (term "1,0"))
         (rule "add_zero_right" (formula "9") (term "0"))
         (rule "leq_literals" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
   )
)
(branch "Null Reference (_a = null)"
   (rule "false_right" (formula "7"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
   (rule "closeFalse" (formula "1"))
)
)
}
