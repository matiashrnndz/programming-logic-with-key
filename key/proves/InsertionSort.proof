\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Dec 02 20:42:27 UYT 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , reach-reach\\:on , sequences-sequences\\:on , methodExpansion-methodExpansion\\:modularOnly , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , permissions-permissions\\:off , modelFields-modelFields\\:treatAsAxiom , javaLoopTreatment-javaLoopTreatment\\:efficient , assertions-assertions\\:safe , bigint-bigint\\:on , moreSeqRules-moreSeqRules\\:on , Strings-Strings\\:on , wdOperator-wdOperator\\:L , integerSimplificationRules-integerSimplificationRules\\:full , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=40000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src/main/java/com/key";

\proofObligation "#Proof Obligation Settings
#Thu Dec 02 20:42:27 UYT 2021
contract=com.key.InsertionSort[com.key.InsertionSort\\:\\:insertionSort()].JML normal_behavior operation contract.0
name=com.key.InsertionSort[com.key.InsertionSort\\:\\:insertionSort()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "matiashrnndz" ) (keyVersion "3ddfc1d216"))

(autoModeTime "75397")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self_25,exc_25,heapAtPre_0,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "5"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_insertionSort,savedHeapBefore_insertionSort"))
 (builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "loopScopeInvDia" (formula "9") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
(branch "Invariant Initially Valid"
    (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,0,1"))
   (rule "leq_literals" (formula "9") (term "0,0"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "sub_literals" (formula "9") (term "1,1,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "allRight" (formula "9") (inst "sk=n_0"))
   (rule "allRight" (formula "9") (inst "sk=m_0"))
   (rule "impRight" (formula "9"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "inEqSimp_leqRight" (formula "13"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
   (rule "add_zero_right" (formula "3") (term "0"))
   (rule "polySimp_mulComm0" (formula "3") (term "0"))
   (rule "inEqSimp_invertInEq1" (formula "3"))
   (rule "times_zero_2" (formula "3") (term "1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
   (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "2"))
   (rule "applyEq" (formula "1") (term "0,2,1,1") (ifseqformula "2"))
   (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
   (rule "leq_literals" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "5"))
   (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "3"))
   (rule "add_zero_right" (formula "5") (term "1"))
   (rule "applyEqRigid" (formula "1") (term "0,2,0") (ifseqformula "3"))
   (rule "inEqSimp_homoInEq0" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "qeq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Invariant Preserved and Used"
    (builtin "One Step Simplification" (formula "10"))
   (rule "translateJavaSubInt" (formula "10") (term "0,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,0,1,0,0,0,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "10") (term "0,1,1,0,1"))
   (rule "impRight" (formula "10"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "14") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0"))
   (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "1,1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "3") (term "1,1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "14") (term "0,1,1,0"))
   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "pullOutSelect" (formula "14") (term "0,1,0,1,1,0") (inst "selectSK=com_key_InsertionSort_a_0"))
   (rule "applyEq" (formula "4") (term "0,0,1,0,0,1,0,0,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "4") (term "1,0,1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
   (rule "simplifySelectOfAnon" (formula "1"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "8")))
   (rule "eqSymm" (formula "1") (term "0,0"))
   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "13"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
   (rule "applyEqReverse" (formula "4") (term "1,1,1,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "15") (term "0,1,0,1,1,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "4") (term "1,0,1,0,0") (ifseqformula "1"))
   (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0,1,0,0,0,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_imp2or" (formula "3") (term "0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0"))
   (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0"))
   (rule "nnf_imp2or" (formula "14") (term "0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "commute_or_2" (formula "3") (term "0,0,0"))
   (rule "commute_or_2" (formula "3") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "3") (term "0,0,0"))
   (rule "arrayLengthNotNegative" (formula "10") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
   (rule "leq_literals" (formula "10") (term "0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "arrayLengthIsAnInt" (formula "10") (term "0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
   (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_3"))
   (rule "assignment" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
   (rule "eval_order_array_access6" (formula "14") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr"))
   (rule "assignment_read_attribute_this" (formula "14"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "replaceKnownSelect_taclet1_0" (formula "14") (term "0,1,0"))
   (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "14") (term "0,1,0"))
   (rule "assignment_read_length" (formula "14"))
   (branch "Normal Execution (x_arr != null)"
       (builtin "One Step Simplification" (formula "14"))
      (rule "less_than_comparison_simple" (formula "14") (term "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
      (rule "ifElseSplit" (formula "14"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "j"))
         (rule "assignment" (formula "15") (term "1"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
         (rule "add_literals" (formula "3") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "3") (term "1,0,0"))
         (rule "add_zero_right" (formula "3") (term "0,0"))
         (rule "qeq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "loopScopeInvDia" (formula "14") (term "1") (newnames "j_0,o,f") (inst "#x=x_3") (inst "#variant=x_2") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_1") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_1") (inst "anon_heap_LOOP=anon_heap_LOOP_1"))
         (branch "Invariant Initially Valid"
             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "4")))
            (rule "replaceKnownSelect_taclet1_0" (formula "14") (term "1,1,1,0,0,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "14") (term "0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "14") (term "1,0,1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "14") (term "1,1,1,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "14") (term "0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "14") (term "1,0,1,0,0,1"))
            (rule "translateJavaAddInt" (formula "14") (term "1,1,0,0,0,0,1"))
            (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,0,0,1"))
            (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,1"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,1"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,1"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1"))
            (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
            (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "14") (term "1,1,0"))
            (rule "polySimp_pullOutFactor1" (formula "14") (term "0,1,1,0"))
            (rule "add_literals" (formula "14") (term "1,0,1,1,0"))
            (rule "times_zero_1" (formula "14") (term "0,1,1,0"))
            (rule "qeq_literals" (formula "14") (term "1,1,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
            (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_subsumption1" (formula "14") (term "0") (ifseqformula "2"))
            (rule "leq_literals" (formula "14") (term "0,0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "allRight" (formula "14") (inst "sk=n_0"))
            (rule "allRight" (formula "14") (inst "sk=m_0"))
            (rule "impRight" (formula "14"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "3"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "18"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "16"))
            (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "4"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0"))
            (rule "qeq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "false_right" (formula "16"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "3") (term "0,0"))
            (rule "mul_literals" (formula "3") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
            (rule "mul_literals" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "2"))
            (rule "leq_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "Class_invariant_axiom_for_com_key_InsertionSort" (formula "16") (ifseqformula "13"))
            (rule "notLeft" (formula "16"))
            (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "9") (term "1") (ifseqformula "13"))
            (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
            (rule "narrowSelectArrayType" (formula "9") (term "2,1") (ifseqformula "11") (ifseqformula "17"))
            (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "9") (term "0") (ifseqformula "13"))
            (rule "replaceKnownSelect_taclet1_0" (formula "9") (term "1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "9") (term "1,0"))
            (rule "array2seqDef" (formula "9") (term "0") (inst "u=u"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "18"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "allLeft" (formula "8") (inst "t=n_0"))
            (rule "replaceKnownSelect_taclet0001_2" (formula "8") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_3" (formula "8") (term "0,1,0"))
            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0,0,0"))
            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0,0,0,0") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "commute_or_2" (formula "8") (term "0,0"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "cut_direct" (formula "8") (term "1,0"))
            (branch "CUT: self_25.a.length <= n_0 TRUE"
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "8"))
               (rule "mul_literals" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1"))
               (rule "polySimp_rightDist" (formula "7") (term "1"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
               (rule "mul_literals" (formula "7") (term "0,1"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "7"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
            (branch "CUT: self_25.a.length <= n_0 FALSE"
                (builtin "One Step Simplification" (formula "8"))
               (rule "inEqSimp_leqRight" (formula "18"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "allLeft" (formula "9") (inst "t=m_0"))
               (rule "replaceKnownSelect_taclet0001_4" (formula "9") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0001_5" (formula "9") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "1"))
               (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "4"))
               (rule "qeq_literals" (formula "9") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
               (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "9") (term "0,0,1"))
               (rule "leq_literals" (formula "9") (term "0,1"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "6"))
               (rule "andLeft" (formula "9"))
               (rule "inEqSimp_homoInEq1" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0"))
               (rule "polySimp_addComm1" (formula "9") (term "0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "1,1,0"))
               (rule "times_zero_1" (formula "9") (term "1,0"))
               (rule "add_zero_right" (formula "9") (term "0"))
               (rule "leq_literals" (formula "9"))
               (rule "closeFalse" (formula "9"))
            )
         )
         (branch "Invariant Preserved and Used"
             (builtin "One Step Simplification" (formula "15"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,1,0,1,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,1,0,1,0,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,0,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,0,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,1,0,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "15") (term "0,1,0,0,0,1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,1,0,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "15") (term "0,1,0,0,0,1,1,0,0,0,0"))
            (rule "translateJavaAddInt" (formula "15") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0,0,0,0,1,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "15") (term "1,1,0,0,0,0,1,0,0"))
            (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0,0,0"))
            (rule "impRight" (formula "15"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "1,1"))
            (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "5") (term "1,1,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "2") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_5"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "pullOutSelect" (formula "4") (term "1,1,1,0,0") (inst "selectSK=com_key_InsertionSort_a_1"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
            (rule "applyEq" (formula "5") (term "1,0,1,0,0") (ifseqformula "4"))
            (rule "simplifySelectOfAnon" (formula "4"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "19")) (ifInst ""  (formula "14")))
            (rule "replaceKnownSelect_taclet1_0" (formula "4") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "4") (term "2,0"))
            (rule "eqSymm" (formula "4") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "4") (term "0,0"))
            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
            (rule "applyEqReverse" (formula "5") (term "1,0,1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "4") (term "1,1,1,0,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
            (rule "leq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "nnf_imp2or" (formula "3") (term "0,0"))
            (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "nnf_notAnd" (formula "3") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0"))
            (rule "nnf_imp2or" (formula "19") (term "0,0,1,0,0,0,1,1,0,1"))
            (rule "nnf_notAnd" (formula "19") (term "0,0,0,1,0,0,0,1,1,0,1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,1,0,0,0,1,1,0,1"))
            (rule "commute_or_2" (formula "3") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "3") (term "0,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=x_6"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_6"))
            (rule "compound_assignment_3_nonsimple" (formula "20") (term "1"))
            (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=x_7"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_7"))
            (rule "compound_assignment_2" (formula "20") (term "1") (inst "#v=x_8"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_8"))
            (rule "greater_than_comparison_simple" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_gtToGeq" (formula "20") (term "0,0,1,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,1,0"))
            (rule "compound_assignment_1_new" (formula "20") (term "1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "ifElseSplit" (formula "20"))
            (branch "if x_7 true"
                (builtin "One Step Simplification" (formula "21"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "ifElseSkipThen" (formula "21") (term "1"))
               (rule "inEqSimp_geqRight" (formula "18"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "assignment" (formula "21") (term "1"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
               (rule "applyEqRigid" (formula "22") (term "0,1,1,0") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "2"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "20") (term "0,1,0,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "applyEq" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "commute_or_2" (formula "2") (term "0,0,0,0"))
               (rule "blockBreak" (formula "19") (term "1"))
               (rule "lsBreak" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "postincrement" (formula "19") (term "1"))
               (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_2"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_9"))
               (rule "remove_parentheses_right" (formula "19") (term "1"))
               (rule "assignmentAdditionInt" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "lsContinue" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "3")))
               (rule "replaceKnownSelect_taclet1001_2" (formula "19") (term "0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "19") (term "0,1,0,1"))
               (rule "replaceKnownSelect_taclet1001_2" (formula "19") (term "0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "19") (term "0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet1001_2" (formula "19") (term "1,1,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1001_2" (formula "19") (term "1,0,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "19") (term "1,1,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "19") (term "1,0,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1001_2" (formula "19") (term "0,1,1,0,0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "19") (term "0,1,1,0,0,0,0,1,0,0"))
               (rule "eqSymm" (formula "19") (term "1,0,0,1,0"))
               (rule "replace_known_left" (formula "19") (term "1,0,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,1"))
               (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
               (rule "mul_literals" (formula "19") (term "0,0,0,1"))
               (rule "precOfInt" (formula "19") (term "1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
               (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
               (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,1,1"))
               (rule "add_literals" (formula "19") (term "1,1,0,1,1"))
               (rule "times_zero_1" (formula "19") (term "1,0,1,1"))
               (rule "add_zero_right" (formula "19") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,1"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,1"))
               (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,1"))
               (rule "add_literals" (formula "19") (term "1,0,1,1"))
               (rule "times_zero_1" (formula "19") (term "0,1,1"))
               (rule "leq_literals" (formula "19") (term "1,1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
               (rule "times_zero_2" (formula "19") (term "1,0,1"))
               (rule "add_zero_right" (formula "19") (term "0,1"))
               (rule "inEqSimp_invertInEq0" (formula "19") (term "0,0,0"))
               (rule "times_zero_2" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
               (rule "mul_literals" (formula "19") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
               (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "6"))
               (rule "leq_literals" (formula "19") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "8") (term "0") (ifseqformula "12"))
               (rule "replaceKnownSelect_taclet1_0" (formula "8") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "8") (term "1,0"))
               (rule "array2seqDef" (formula "8") (term "0") (inst "u=u"))
               (rule "Class_invariant_axiom_for_com_key_InsertionSort" (formula "16") (ifseqformula "12"))
               (rule "notLeft" (formula "16"))
               (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "8") (term "1") (ifseqformula "12"))
               (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
               (rule "narrowSelectArrayType" (formula "8") (term "2,1") (ifseqformula "10") (ifseqformula "17"))
               (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "3") (term "0") (ifseqformula "12"))
               (rule "replaceKnownSelect_taclet1001_2" (formula "3") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "3") (term "1,0"))
               (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
               (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "3") (term "1") (ifseqformula "12"))
               (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
               (rule "narrowSelectArrayType" (formula "3") (term "2,1") (ifseqformula "10") (ifseqformula "17"))
               (rule "andRight" (formula "18"))
               (branch "Case 1"
                  (rule "allRight" (formula "18") (inst "sk=n_0"))
                  (rule "allRight" (formula "18") (inst "sk=m_0"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "inEqSimp_geqRight" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_geqRight" (formula "22"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "22"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_leqRight" (formula "22"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1"))
                  (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnon" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "13"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "allLeft" (formula "13") (inst "t=n_0"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0,0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
                  (rule "leq_literals" (formula "13") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "pullOutSelect" (formula "13") (term "1,1,0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnon" (formula "13"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "commute_or_2" (formula "13") (term "0,0"))
                  (rule "commute_or_2" (formula "13") (term "0"))
                  (rule "cut_direct" (formula "13") (term "1,0"))
                  (branch "CUT: n_0 >= i_0 TRUE"
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "5"))
                     (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,0"))
                     (rule "times_zero_1" (formula "5") (term "0"))
                     (rule "qeq_literals" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "13"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                     (rule "add_literals" (formula "13") (term "1,0"))
                     (rule "times_zero_1" (formula "13") (term "0"))
                     (rule "leq_literals" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "12"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "11"))
                     (rule "inEqSimp_commuteGeq" (formula "3"))
                     (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                     (rule "allLeft" (formula "11") (inst "t=m_0"))
                     (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "11") (term "1,1,0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "11"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "11"))
                     (rule "hideAuxiliaryEq" (formula "11"))
                     (rule "commute_or_2" (formula "11") (term "0,0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_or_2" (formula "11") (term "0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0,0"))
                     (rule "cut_direct" (formula "11") (term "1,0"))
                     (branch "CUT: self_25.a.length <= m_0 TRUE"
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "11"))
                        (rule "mul_literals" (formula "20") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "20"))
                        (rule "leq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "10"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "CUT: self_25.a.length <= m_0 FALSE"
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "cut_direct" (formula "12") (term "1,0"))
                        (branch "CUT: m_0 >= i_0 TRUE"
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "12"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "1,0"))
                           (rule "times_zero_1" (formula "12") (term "0"))
                           (rule "leq_literals" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,0"))
                           (rule "times_zero_1" (formula "2") (term "0"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: m_0 >= i_0 FALSE"
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_geqRight" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                           (rule "mul_literals" (formula "3") (term "0,0"))
                           (rule "add_zero_left" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "allLeft" (formula "12") (inst "t=m_0"))
                           (rule "replaceKnownSelect_taclet0001001_10" (formula "12") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0001001_11" (formula "12") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "12") (term "0,1,0"))
                           (rule "leq_literals" (formula "12") (term "1,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_homoInEq0" (formula "12") (term "1"))
                           (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1"))
                           (rule "add_literals" (formula "12") (term "1,0,1"))
                           (rule "times_zero_1" (formula "12") (term "0,1"))
                           (rule "qeq_literals" (formula "12") (term "1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "allLeft" (formula "6") (inst "t=i_0"))
                           (rule "inEqSimp_commuteLeq" (formula "6") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,1,0,0,0"))
                           (rule "leq_literals" (formula "6") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradEq7" (formula "6") (term "1,0,0,0") (ifseqformula "11"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "6") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "pullOutSelect" (formula "6") (term "1,1,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnon" (formula "6"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "allLeft" (formula "6") (inst "t=m_0"))
                           (rule "replaceKnownSelect_taclet001001_6" (formula "6") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001001_7" (formula "6") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                           (rule "add_literals" (formula "6") (term "0,0,1"))
                           (rule "leq_literals" (formula "6") (term "0,1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_literals" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                  )
                  (branch "CUT: n_0 >= i_0 FALSE"
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_geqRight" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                     (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                     (rule "mul_literals" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "allLeft" (formula "13") (inst "t=m_0"))
                     (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "13") (term "0,0"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "13"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                     (rule "hideAuxiliaryEq" (formula "13"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "allLeft" (formula "8") (inst "t=n_0"))
                     (rule "replaceKnownSelect_taclet001001_4" (formula "8") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet001001_5" (formula "8") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "commute_or_2" (formula "8") (term "0,0"))
                     (rule "commute_or_2" (formula "8") (term "0"))
                     (rule "cut_direct" (formula "8") (term "1,0"))
                     (branch "CUT: n_0 = 0 TRUE"
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEqRigid" (formula "14") (term "0,2,0") (ifseqformula "8"))
                        (rule "inEqSimp_commuteGeq" (formula "14"))
                        (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "5") (term "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "applyEq" (formula "14") (term "0,2,1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "7"))
                        (rule "add_zero_right" (formula "14") (term "1,1,0,0"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_commuteGeq" (formula "4"))
                        (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_zero_right" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "CUT: n_0 = 0 FALSE"
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "allLeft" (formula "16") (inst "t=m_0"))
                        (rule "replaceKnownSelect_taclet1001001_10" (formula "16") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001001_11" (formula "16") (term "0,1,0"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0,0,0,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0,0"))
                        (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "commute_or_2" (formula "16") (term "0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "cut_direct" (formula "16") (term "1,0"))
                        (branch "CUT: self_25.a.length <= m_0 TRUE"
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                           (rule "andLeft" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,1,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0"))
                           (rule "add_literals" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "closeFalse" (formula "5"))
                        )
                        (branch "CUT: self_25.a.length <= m_0 FALSE"
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_leqRight" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "allLeft" (formula "17") (inst "t=m_0"))
                           (rule "replaceKnownSelect_taclet1001001_10" (formula "17") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1001001_11" (formula "17") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,1,0"))
                           (rule "leq_literals" (formula "17") (term "1,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1"))
                           (rule "add_literals" (formula "17") (term "1,0,1"))
                           (rule "times_zero_1" (formula "17") (term "0,1"))
                           (rule "qeq_literals" (formula "17") (term "1"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "allLeft" (formula "16") (inst "t=n_0"))
                           (rule "replaceKnownSelect_taclet001001_8" (formula "16") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001001_9" (formula "16") (term "0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "16") (term "0,1,0"))
                           (rule "leq_literals" (formula "16") (term "1,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                           (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                           (rule "add_literals" (formula "16") (term "1,0,1"))
                           (rule "times_zero_1" (formula "16") (term "0,1"))
                           (rule "qeq_literals" (formula "16") (term "1"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "allLeft" (formula "9") (inst "t=m_0"))
                           (rule "replaceKnownSelect_taclet001001_6" (formula "9") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001001_7" (formula "9") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "9") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1"))
                           (rule "leq_literals" (formula "9") (term "0,1"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "9") (term "0,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "9"))
                           (rule "applyEq" (formula "11") (term "0,2,1,1,0") (ifseqformula "5"))
                           (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                           (rule "leq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "10"))
                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,0"))
                           (rule "times_zero_1" (formula "10") (term "0"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_literals" (formula "8") (term "0"))
                           (rule "qeq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "18") (inst "sk=f_0"))
                  (rule "allRight" (formula "18") (inst "sk=o_0"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "eqSymm" (formula "21"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "18"))
                     (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "23"))
                     (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "17")))
                     (rule "closeTrue" (formula "22"))
                  )
                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) FALSE"
                     (rule "close" (formula "22") (ifseqformula "1"))
                  )
               )
            )
            (branch "if x_7 false"
                (builtin "One Step Simplification" (formula "21"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "compound_greater_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_9"))
               (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_1"))
               (rule "assignment_read_attribute_this" (formula "20"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "replaceKnownSelect_taclet1001_2" (formula "20") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "20") (term "0,1,0"))
               (rule "eval_order_array_access5" (formula "20") (term "1") (inst "#v1=x_10") (inst "#ar1=x_arr_2"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_2"))
               (rule "assignment" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_10"))
               (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
               (rule "assignment_array2" (formula "20"))
               (branch "Normal Execution (x_arr_2 != null)"
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_11"))
                  (rule "eval_order_array_access4" (formula "20") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_arr_3"))
                  (rule "assignment_read_attribute_this" (formula "20"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "replaceKnownSelect_taclet1001_2" (formula "20") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "20") (term "0,1,0"))
                  (rule "assignment_array2" (formula "20"))
                  (branch "Normal Execution (x_arr_3 != null)"
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "greater_than_comparison_simple" (formula "20") (term "1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_gtToGeq" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "ifElseSplit" (formula "20"))
                     (branch "if x_6 true"
                         (builtin "One Step Simplification" (formula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "temp"))
                        (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_4"))
                        (rule "assignment_read_attribute_this" (formula "21"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,1,0"))
                        (rule "assignment_array2" (formula "21"))
                        (branch "Normal Execution (x_arr_4 != null)"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replaceKnownSelect_taclet0011001_6" (formula "21") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0011001_7" (formula "21") (term "0,1,0"))
                           (rule "eval_order_array_access1" (formula "21") (term "1") (inst "#v0=x_arr"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_5"))
                           (rule "assignment_read_attribute_this" (formula "21"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,1,0"))
                           (rule "eval_order_array_access3" (formula "21") (term "1") (inst "#v1=x_7") (inst "#v2=x_6") (inst "#v0=x_arr_6"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_6"))
                           (rule "assignment" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_12"))
                           (rule "assignment" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_13"))
                           (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr_7"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_7"))
                           (rule "assignment_read_attribute_this" (formula "21"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,1,0"))
                           (rule "eval_order_array_access5" (formula "21") (term "1") (inst "#v1=x_14") (inst "#ar1=x_arr_8"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_8"))
                           (rule "assignment" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "variableDeclarationAssign" (formula "21") (term "1"))
                           (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_14"))
                           (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                           (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                           (rule "assignment_array2" (formula "21"))
                           (branch "Normal Execution (x_arr_8 != null)"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replaceKnownSelect_taclet011001_4" (formula "21") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "21") (term "0,1,0"))
                              (rule "assignment_to_primitive_array_component" (formula "21"))
                              (branch "Normal Execution (x_arr_6 != null)"
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "eval_order_array_access1" (formula "21") (term "1") (inst "#v0=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_9"))
                                 (rule "assignment_read_attribute_this" (formula "21"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "dismissNonSelectedField" (formula "21") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,1,0"))
                                 (rule "eval_order_array_access2" (formula "21") (term "1") (inst "#v0=x_6") (inst "#ar1=x_arr_10"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_10"))
                                 (rule "assignment" (formula "21") (term "1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                 (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_15"))
                                 (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                 (rule "assignment_to_primitive_array_component" (formula "21"))
                                 (branch "Normal Execution (x_arr_10 != null)"
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "postdecrement" (formula "21") (term "1"))
                                    (rule "compound_subtraction_1" (formula "21") (term "1") (inst "#v=x_6"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                    (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_16"))
                                    (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                    (rule "assignment" (formula "21") (term "1"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "assignmentSubtractionInt" (formula "21") (term "1"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaSubInt" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "21") (term "0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                    (rule "blockEmpty" (formula "21") (term "1"))
                                    (rule "lsContinue" (formula "21") (term "1"))
                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "8")))
                                    (rule "replaceKnownSelect_taclet1_0" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "21") (term "1,0,0,0,0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
                                    (rule "precOfInt" (formula "21") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,0,0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0,0,0,0") (ifseqformula "7"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "21") (term "0,1,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "0,1,1"))
                                    (rule "leq_literals" (formula "21") (term "1,1"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "0,0,0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                    (rule "mul_literals" (formula "21") (term "1,1"))
                                    (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_subsumption0" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "nnf_notOr" (formula "21") (term "1,1,0,0,0,1"))
                                    (rule "Class_invariant_axiom_for_com_key_InsertionSort" (formula "18") (ifseqformula "14"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "10") (term "1") (ifseqformula "14"))
                                    (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "10") (term "2,1") (ifseqformula "12") (ifseqformula "19"))
                                    (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "5") (term "0") (ifseqformula "14"))
                                    (rule "replaceKnownSelect_taclet1001_2" (formula "5") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "5") (term "1,0"))
                                    (rule "array2seqDef" (formula "5") (term "0") (inst "u=u"))
                                    (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "5") (term "1") (ifseqformula "14"))
                                    (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "5") (term "2,1") (ifseqformula "12") (ifseqformula "19"))
                                    (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "10") (term "0") (ifseqformula "14"))
                                    (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,0"))
                                    (rule "array2seqDef" (formula "10") (term "0") (inst "u=u"))
                                    (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "20") (term "0,1,0") (ifseqformula "14"))
                                    (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0"))
                                    (rule "replaceKnownSelect_taclet1001_2" (formula "20") (term "1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "20") (term "1,0,1,0"))
                                    (rule "array2seqDef" (formula "20") (term "0,1,0") (inst "u=u"))
                                    (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "20") (term "1,1,0") (ifseqformula "14"))
                                    (rule "array2seqDef" (formula "20") (term "1,1,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "20") (term "2,1,1,0") (ifseqformula "12") (ifseqformula "19"))
                                    (rule "allLeft" (formula "9") (inst "t=j_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "9") (term "1,1,0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfAnon" (formula "9"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "commute_or_2" (formula "9") (term "0,0"))
                                    (rule "commute_or_2" (formula "9") (term "0"))
                                    (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "9") (term "0,0"))
                                    (rule "cut_direct" (formula "9") (term "1,0"))
                                    (branch "CUT: self_25.a.length <= j_0 TRUE"
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                    (branch "CUT: self_25.a.length <= j_0 FALSE"
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_leqRight" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "cut_direct" (formula "10") (term "1,0"))
                                       (branch "CUT: j_0 >= i_0 TRUE"
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "4"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "1,0"))
                                          (rule "times_zero_1" (formula "11") (term "0"))
                                          (rule "leq_literals" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "applyEqRigid" (formula "22") (term "0,2,3,0,0,1,0,0,1") (ifseqformula "10"))
                                          (rule "applyEqRigid" (formula "22") (term "1,0,2,0,0,1,0,0,0,0") (ifseqformula "10"))
                                          (rule "applyEqRigid" (formula "22") (term "1,0,2,0,0,1,0,0,1") (ifseqformula "10"))
                                          (rule "applyEq" (formula "22") (term "1,0,2,3,0,0,0,1,0,0,1") (ifseqformula "10"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,0"))
                                          (rule "times_zero_1" (formula "4") (term "0"))
                                          (rule "qeq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "21") (term "1,0,2,3,0,0,1,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "21") (term "1,0,2,3,0,0,0,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "21") (term "0,2,3,0,2,0,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "21") (term "0,2,0,0,0,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "21") (term "0,2,0,0,0,1,0,0,1") (ifseqformula "9"))
                                          (rule "applyEq" (formula "2") (term "0,2,1,1") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "21") (term "1,0,2,3,0,0,2,0,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "2") (term "1,0,2,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "21") (term "0,2,3,0,1,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "21") (term "0,2,0,0,2,0,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "21") (term "1,0,2,0,2,0,1,0") (ifseqformula "9"))
                                          (rule "applyEqRigid" (formula "21") (term "0,2,0,0,1,1,0,0,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "20") (term "1,0,2,0,1,1,0,0,0,0") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "19") (term "0,2,3,0,0,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "2") (term "1,1,0,0,0,0") (ifseqformula "7"))
                                          (rule "applyEqRigid" (formula "19") (term "1,1,1,0,0,0,0,0") (ifseqformula "7"))
                                          (rule "commute_or_2" (formula "2") (term "0,0,0,0"))
                                          (rule "inEqSimp_or_weaken3" (formula "2") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "cut_direct" (formula "19") (term "1,0"))
                                          (branch "CUT: seqPerm(seqDef{int u;}(0, self_25.a.length, any::select(heap[anon(self_25.a.*, anon_heap_LOOP_0<<anonHeapFunction>>)] [anon(self_25.a.*, anon_heap_LOOP_1<<anonHeapFunction>>)] [self_25.a[i_0] := (self_25.a@heap)[ -1 + i_0]@anon_heap_LOOP_1<<anonHeapFunction>>] [self_25.a[ -1 + i_0] := (self_25.a@heap)[i_0]@anon_heap_LOOP_1<<anonHeapFunction>>], self_25.a, arr(u))), seqDef{int u;}(0, self_25.a.length, self_25.a[u])) TRUE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "andRight" (formula "20"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "20") (inst "sk=n_0"))
                                                (rule "allRight" (formula "20") (inst "sk=m_0"))
                                                (rule "orRight" (formula "20"))
                                                (rule "orRight" (formula "20"))
                                                (rule "orRight" (formula "20"))
                                                (rule "orRight" (formula "20"))
                                                (rule "inEqSimp_geqRight" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "23"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "23"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfStore" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "castDel" (formula "4") (term "1,0"))
                                                (rule "eqSymm" (formula "4") (term "0,0"))
                                                (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "simplifySelectOfStore" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "castDel" (formula "4") (term "1,0"))
                                                (rule "eqSymm" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfStore" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "castDel" (formula "5") (term "1,0"))
                                                (rule "eqSymm" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_6"))
                                                (rule "simplifySelectOfStore" (formula "6"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "castDel" (formula "6") (term "1,0"))
                                                (rule "eqSymm" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_contradEq3" (formula "6") (term "0,0") (ifseqformula "2"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "simplifySelectOfAnon" (formula "6"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "n_0 = i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "5"))
                                                   (rule "polySimp_homoEq" (formula "27"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0"))
                                                   (rule "add_literals" (formula "27") (term "0"))
                                                   (rule "equal_literals" (formula "27"))
                                                   (rule "false_right" (formula "27"))
                                                   (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "0"))
                                                   (rule "qeq_literals" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "allLeft" (formula "15") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "15") (term "1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "15") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "pullOutSelect" (formula "15") (term "1,1,0") (inst "selectSK=arr_7"))
                                                   (rule "simplifySelectOfAnon" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                                   (rule "hideAuxiliaryEq" (formula "15"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "m_0 = -1 + i_0 TRUE"
                                                      (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0"))
                                                      (rule "add_literals" (formula "7") (term "0"))
                                                      (rule "qeq_literals" (formula "7"))
                                                      (rule "closeFalse" (formula "7"))
                                                   )
                                                   (branch "m_0 = -1 + i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                      (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "24"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                      (rule "add_literals" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                      (rule "add_literals" (formula "24") (term "0,0"))
                                                      (rule "qeq_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "false_right" (formula "24"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "allLeft" (formula "14") (inst "t=m_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "14") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_8"))
                                                      (rule "simplifySelectOfAnon" (formula "14"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                                      (rule "hideAuxiliaryEq" (formula "14"))
                                                      (rule "allLeft" (formula "9") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "9") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "pullOutSelect" (formula "9") (term "1,1,0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "9"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "9"))
                                                      (rule "hideAuxiliaryEq" (formula "9"))
                                                      (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                      (rule "replaceKnownSelect_taclet00001000000011001_19" (formula "16") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00001000000011001_20" (formula "16") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "16") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                                                      (rule "add_literals" (formula "16") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "16") (term "0,1"))
                                                      (rule "qeq_literals" (formula "16") (term "1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "allLeft" (formula "9") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet0001000000011001_16" (formula "9") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0001000000011001_17" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "9") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "9"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0"))
                                                      (rule "add_literals" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "n_0 = i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "24"))
                                                   (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "4"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "false_right" (formula "24"))
                                                   (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "26"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "qeq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "false_right" (formula "26"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_contradEq3" (formula "6") (term "0,0") (ifseqformula "3"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "1,0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "pullOutSelect" (formula "14") (term "1,1,0") (inst "selectSK=arr_7"))
                                                   (rule "simplifySelectOfAnon" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "14"))
                                                   (rule "hideAuxiliaryEq" (formula "14"))
                                                   (rule "allLeft" (formula "9") (inst "t=n_0"))
                                                   (rule "replaceKnownSelect_taclet0001000000011001_12" (formula "9") (term "0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0001000000011001_13" (formula "9") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0,0,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "9") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "10") (term "1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "pullOutSelect" (formula "10") (term "1,1,0") (inst "selectSK=arr_8"))
                                                   (rule "simplifySelectOfAnon" (formula "10"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "10"))
                                                   (rule "hideAuxiliaryEq" (formula "10"))
                                                   (rule "allLeft" (formula "10") (inst "t=m_0"))
                                                   (rule "replaceKnownSelect_taclet0001000000011001_16" (formula "10") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0001000000011001_17" (formula "10") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "10") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "allLeft" (formula "9") (inst "t=m_0"))
                                                   (rule "replaceKnownSelect_taclet0001000000011001_16" (formula "9") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0001000000011001_17" (formula "9") (term "0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "9") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "9") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_literals" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "20") (inst "sk=f_0"))
                                                (rule "allRight" (formula "20") (inst "sk=o_0"))
                                                (rule "orRight" (formula "20"))
                                                (rule "orRight" (formula "20"))
                                                (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "23"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                                (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_1"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                (rule "shift_paren_and" (formula "23"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                   (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "20"))
                                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "19"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "orRight" (formula "20"))
                                                      (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "18"))
                                                       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")))
                                                      (rule "closeTrue" (formula "21"))
                                                   )
                                                   (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) FALSE"
                                                      (rule "close" (formula "24") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: seqPerm(seqDef{int u;}(0, self_25.a.length, any::select(heap[anon(self_25.a.*, anon_heap_LOOP_0<<anonHeapFunction>>)] [anon(self_25.a.*, anon_heap_LOOP_1<<anonHeapFunction>>)] [self_25.a[i_0] := (self_25.a@heap)[ -1 + i_0]@anon_heap_LOOP_1<<anonHeapFunction>>] [self_25.a[ -1 + i_0] := (self_25.a@heap)[i_0]@anon_heap_LOOP_1<<anonHeapFunction>>], self_25.a, arr(u))), seqDef{int u;}(0, self_25.a.length, self_25.a[u])) FALSE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "false_right" (formula "20"))
                                             (rule "seqPermFromSwap" (formula "19") (inst "iv=iv") (inst "jv=jv") (ifseqformula "3") (userinteraction))
                                             (rule "andRight" (formula "19") (userinteraction))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "closeTrue" (formula "19"))
                                             )
                                             (branch "Case 2"
                                                (rule "eqSymm" (formula "19") (term "1,0,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0,0"))
                                                (rule "replace_known_left" (formula "19") (term "0,1,1,1,0,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "19") (term "0,1,1,1,0,0,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSeqDef" (formula "19") (term "1,0,0") (inst "iv=iv_1"))
                                                (rule "getOfSeqDef" (formula "19") (term "1,1,0,1,1,0,0"))
                                                (rule "castDel" (formula "19") (term "2,1,1,0,1,1,0,0"))
                                                (rule "castDel" (formula "19") (term "1,1,1,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,0,1,1,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0,1,1,0,0"))
                                                (rule "lenOfSwap" (formula "19") (term "0,0,1,0,0"))
                                                (rule "lenOfSwap" (formula "19") (term "1,1,0,0,1,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "0,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,0,0"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0"))
                                                (rule "getOfSwap" (formula "19") (term "0,1,0,1,0,0"))
                                                (rule "eqSymm" (formula "19") (term "0,2,2,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "19") (term "1,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "2,1,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "1,1,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,2,1,1,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "19") (term "2,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "2,2,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "1,2,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,2,1,2,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "times_zero_2" (formula "19") (term "1,1,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "19") (term "1,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "1,1,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "2,1,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,2,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,0,1,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,1,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "19") (term "1,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "2,1,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "19") (term "1,1,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,2,1,1,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,1,1,0,1,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "1,1,0,1,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "ifthenelse_negated" (formula "19") (term "0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "replace_known_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,0,1,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "replace_known_left" (formula "19") (term "0,1,1,1,0,0,0,1,0,1,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,1,0,0"))
                                                (rule "nnf_ex2all" (formula "19"))
                                                (rule "nnf_notEx" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                (rule "nnf_notAll" (formula "1") (term "1,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "1") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_and" (formula "1") (term "0,0,1,0,0"))
                                                (rule "ex_pull_out3" (formula "1") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "allLeft" (formula "1") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,0,1,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "1,2,1,0,0,0,0,0,0,0,0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "allLeft" (formula "2") (inst "t=i_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "2") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,0,1,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "pullOutSelect" (formula "2") (term "1,2,1,0,0,0,0,0,0,0,0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                (rule "equal_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "3") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_and" (formula "1") (term "1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int7" (formula "2") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0,1,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0,1,0,1,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "commute_and_2" (formula "1") (term "1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "1,0,0,0,1,0,0,0,0,0,0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq_or_int5" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,0,0,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,0,0,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,1,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int5" (formula "2") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,1,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,0,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,0,0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,1,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,1,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int5" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,0,0,0,1,1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,0,0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "2") (term "0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0,0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "eqSymm" (formula "3") (term "0,1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,1,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,1,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,1,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "eqSymm" (formula "3") (term "0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "eqSymm" (formula "3") (term "0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,1,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "allLeft" (formula "1") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                                (rule "replaceKnownSelect_taclet1101000000011001_10" (formula "1") (term "0,0,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1101000000011001_11" (formula "1") (term "0,0,0,0,0,1,0"))
                                                (rule "exLeft" (formula "1") (inst "sk=iv_1_0"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "10") (term "0,0,0,0"))
                                                (rule "eqSymm" (formula "9") (term "1"))
                                                (rule "eqSymm" (formula "8") (term "1"))
                                                (rule "eqSymm" (formula "7") (term "1"))
                                                (rule "eqSymm" (formula "6") (term "1"))
                                                (rule "eqSymm" (formula "5") (term "1"))
                                                (rule "eqSymm" (formula "4") (term "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "10") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "5") (term "0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,1,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "3") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,1"))
                                                (rule "leq_literals" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,0,1"))
                                                (rule "leq_literals" (formula "2") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "leq_literals" (formula "3") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "6") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "2") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "16"))
                                                (rule "qeq_literals" (formula "3") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=arr_5"))
                                                (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "narrowSelectArrayType" (formula "4") (term "0,0,0") (ifseqformula "11") (ifseqformula "25"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0,0") (ifseqformula "11") (ifseqformula "25"))
                                                (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=arr_6"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "eqSymm" (formula "3") (term "0,0"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replaceKnownSelect_taclet1101000000011001_15" (formula "3") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1101000000011001_16" (formula "3") (term "2,0"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "eqSymm" (formula "3") (term "0,0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "13") (ifseqformula "27"))
                                                (rule "commute_or" (formula "6"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "iv_1_0 = i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "5") (term "0,2,0,0,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "notLeft" (formula "5"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "24"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "eqSymm" (formula "3") (term "0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "2"))
                                                   (rule "polySimp_homoEq" (formula "23"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_literals" (formula "23") (term "0"))
                                                   (rule "equal_literals" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "22"))
                                                   (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "6"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0"))
                                                   (rule "leq_literals" (formula "22") (term "0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "false_right" (formula "22"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "allLeft" (formula "2") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet1101000000011001_12" (formula "2") (term "0,0,0,0,0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1101000000011001_14" (formula "2") (term "0,0,0,0,0,1,0"))
                                                   (rule "exLeft" (formula "2") (inst "sk=iv_1_1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "eqSymm" (formula "11") (term "0,0,0,0"))
                                                   (rule "eqSymm" (formula "10") (term "1"))
                                                   (rule "eqSymm" (formula "9") (term "1"))
                                                   (rule "eqSymm" (formula "8") (term "1"))
                                                   (rule "eqSymm" (formula "7") (term "1"))
                                                   (rule "eqSymm" (formula "6") (term "1"))
                                                   (rule "eqSymm" (formula "5") (term "1"))
                                                   (rule "eqSymm" (formula "2") (term "0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "11") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "19"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "3") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "3") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "4") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "2") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "5") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "pullOutSelect" (formula "6") (term "0,0,0") (inst "selectSK=arr_8"))
                                                   (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "5") (term "1,0,0,0") (ifseqformula "6"))
                                                   (rule "simplifySelectOfAnon" (formula "6"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,0,0,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "narrowSelectArrayType" (formula "6") (term "0,0,0") (ifseqformula "13") (ifseqformula "27"))
                                                   (rule "narrowSelectArrayType" (formula "5") (term "1,0,0,0") (ifseqformula "13") (ifseqformula "27"))
                                                   (rule "narrowSelectArrayType" (formula "2") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "27"))
                                                   (rule "pullOutSelect" (formula "5") (term "0,0,0,0") (inst "selectSK=arr_9"))
                                                   (rule "simplifySelectOfStore" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "castDel" (formula "5") (term "1,0"))
                                                   (rule "eqSymm" (formula "5") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_10"))
                                                   (rule "simplifySelectOfStore" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replaceKnownSelect_taclet01101000000011001_21" (formula "5") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01101000000011001_22" (formula "5") (term "2,0"))
                                                   (rule "castDel" (formula "5") (term "1,0"))
                                                   (rule "eqSymm" (formula "5") (term "0,0"))
                                                   (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "15") (ifseqformula "29"))
                                                   (rule "commute_or" (formula "8"))
                                                   (rule "commute_or" (formula "2") (term "0"))
                                                   (rule "commute_or_2" (formula "2"))
                                                   (rule "applyEq_or_gen0" (formula "2") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "equal_literals" (formula "2") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "iv_1_1 = i_0 TRUE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "closeTrue" (formula "26"))
                                                   )
                                                   (branch "iv_1_1 = i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "27"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "iv_1_1 = -1 + i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "0,0"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "notLeft" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "4"))
                                                         (rule "polySimp_homoEq" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0"))
                                                         (rule "add_literals" (formula "25") (term "0"))
                                                         (rule "equal_literals" (formula "25"))
                                                         (rule "false_right" (formula "25"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "4"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "add_zero_left" (formula "3") (term "1"))
                                                         (rule "applyEqRigid" (formula "24") (term "0,2,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeTrue" (formula "24"))
                                                      )
                                                      (branch "iv_1_1 = -1 + i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "26")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                )
                                                (branch "iv_1_0 = i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "iv_1_0 = -1 + i_0 TRUE"
                                                      (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "4") (term "0,0"))
                                                      (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                      (rule "add_literals" (formula "2") (term "0,1"))
                                                      (rule "add_zero_left" (formula "2") (term "1"))
                                                      (rule "applyEqRigid" (formula "23") (term "0,2,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                                      (rule "polySimp_homoEq" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0"))
                                                      (rule "add_literals" (formula "24") (term "0"))
                                                      (rule "equal_literals" (formula "24"))
                                                      (rule "false_right" (formula "24"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "6"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "false_right" (formula "22"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "2") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet1101000000011001_12" (formula "2") (term "0,0,0,0,0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1101000000011001_14" (formula "2") (term "0,0,0,0,0,1,0"))
                                                      (rule "exLeft" (formula "2") (inst "sk=iv_1_1"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "eqSymm" (formula "11") (term "0,0,0,0"))
                                                      (rule "eqSymm" (formula "10") (term "1"))
                                                      (rule "eqSymm" (formula "9") (term "1"))
                                                      (rule "eqSymm" (formula "8") (term "1"))
                                                      (rule "eqSymm" (formula "7") (term "1"))
                                                      (rule "eqSymm" (formula "6") (term "1"))
                                                      (rule "eqSymm" (formula "5") (term "1"))
                                                      (rule "eqSymm" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "11") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "3") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "4") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "5") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "2") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "pullOutSelect" (formula "6") (term "0,0,0") (inst "selectSK=arr_8"))
                                                      (rule "applyEq" (formula "5") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "6"))
                                                      (rule "simplifySelectOfAnon" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "5") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "narrowSelectArrayType" (formula "5") (term "1,0,0,0") (ifseqformula "13") (ifseqformula "27"))
                                                      (rule "narrowSelectArrayType" (formula "6") (term "0,0,0") (ifseqformula "13") (ifseqformula "27"))
                                                      (rule "narrowSelectArrayType" (formula "2") (term "0,0,0,0") (ifseqformula "13") (ifseqformula "27"))
                                                      (rule "pullOutSelect" (formula "5") (term "0,0,0,0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfStore" (formula "5"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "castDel" (formula "5") (term "1,0"))
                                                      (rule "eqSymm" (formula "5") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfStore" (formula "5"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replaceKnownSelect_taclet011101000000011001_21" (formula "5") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011101000000011001_22" (formula "5") (term "2,0"))
                                                      (rule "castDel" (formula "5") (term "1,0"))
                                                      (rule "eqSymm" (formula "5") (term "0,0"))
                                                      (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "15") (ifseqformula "29"))
                                                      (rule "commute_or" (formula "8"))
                                                      (rule "commute_or" (formula "2") (term "0"))
                                                      (rule "commute_or_2" (formula "2"))
                                                      (rule "applyEq_or_gen0" (formula "2") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "equal_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "iv_1_1 = i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "applyEqRigid" (formula "26") (term "0,2,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "closeTrue" (formula "26"))
                                                      )
                                                      (branch "iv_1_1 = i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "27"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "replace_known_right" (formula "5") (term "1") (ifseqformula "26"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "4") (term "0"))
                                                         (branch "iv_1_1 = -1 + i_0 TRUE"
                                                            (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "5") (term "0,0"))
                                                            (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "4"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                            (rule "add_literals" (formula "3") (term "0,1"))
                                                            (rule "add_zero_left" (formula "3") (term "1"))
                                                            (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "4"))
                                                            (rule "polySimp_homoEq" (formula "25"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0"))
                                                            (rule "add_literals" (formula "25") (term "0"))
                                                            (rule "equal_literals" (formula "25"))
                                                            (rule "false_right" (formula "25"))
                                                            (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "4"))
                                                            (rule "applyEqRigid" (formula "24") (term "0,2,0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "24"))
                                                            (rule "closeTrue" (formula "24"))
                                                         )
                                                         (branch "iv_1_1 = -1 + i_0 FALSE"
                                                            (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "26")))
                                                            (rule "closeFalse" (formula "5"))
                                                         )
                                                      )
                                                   )
                                                   (branch "iv_1_0 = -1 + i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_0 >= i_0 FALSE"
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_geqRight" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "4") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "allLeft" (formula "10") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet000000011001_8" (formula "10") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000000011001_9" (formula "10") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1"))
                                          (rule "add_literals" (formula "10") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "10") (term "0,1"))
                                          (rule "qeq_literals" (formula "10") (term "1"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "10") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=arr_3"))
                                          (rule "simplifySelectOfAnon" (formula "10"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "cut_direct" (formula "23") (term "1,0"))
                                          (branch "CUT: seqPerm(seqDef{int u;}(0, self_25.a.length, any::select(heap[anon(self_25.a.*, anon_heap_LOOP_0<<anonHeapFunction>>)] [anon(self_25.a.*, anon_heap_LOOP_1<<anonHeapFunction>>)] [self_25.a[j_0] := (self_25.a@heap)[ -1 + j_0]@anon_heap_LOOP_1<<anonHeapFunction>>] [self_25.a[ -1 + j_0] := (self_25.a@heap)[j_0]@anon_heap_LOOP_1<<anonHeapFunction>>], self_25.a, arr(u))), seqDef{int u;}(0, self_25.a.length, self_25.a[u])) TRUE"
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "andRight" (formula "24"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "24") (inst "sk=n_0"))
                                                (rule "allRight" (formula "24") (inst "sk=m_0"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "inEqSimp_geqRight" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_leqRight" (formula "27"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "27"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "castDel" (formula "4") (term "1,0"))
                                                (rule "eqSymm" (formula "4") (term "0,0"))
                                                (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "29"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "simplifySelectOfStore" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "castDel" (formula "4") (term "1,0"))
                                                (rule "eqSymm" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_6"))
                                                (rule "simplifySelectOfStore" (formula "5"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "castDel" (formula "5") (term "1,0"))
                                                (rule "eqSymm" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_7"))
                                                (rule "simplifySelectOfStore" (formula "6"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "castDel" (formula "6") (term "1,0"))
                                                (rule "eqSymm" (formula "6") (term "0,0"))
                                                (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_8"))
                                                (rule "simplifySelectOfAnon" (formula "6"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "n_0 = j_0 TRUE"
                                                   (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0") (ifseqformula "5"))
                                                   (rule "polySimp_homoEq" (formula "32"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0"))
                                                   (rule "add_literals" (formula "32") (term "0"))
                                                   (rule "equal_literals" (formula "32"))
                                                   (rule "false_right" (formula "32"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_contradEq3" (formula "6") (term "0,0") (ifseqformula "3"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "6"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "m_0 = -1 + j_0 TRUE"
                                                      (rule "applyEqReverse" (formula "11") (term "1,1") (ifseqformula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0"))
                                                      (rule "add_literals" (formula "10") (term "0"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                   (branch "m_0 = -1 + j_0 FALSE"
                                                      (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "28"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "0,1"))
                                                      (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "false_right" (formula "28"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                      (rule "replaceKnownSelect_taclet11000000011001_10" (formula "19") (term "0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000000011001_11" (formula "19") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "18") (inst "t=m_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "18"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                      (rule "hideAuxiliaryEq" (formula "18"))
                                                      (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                      (rule "replaceKnownSelect_taclet011001_4" (formula "13") (term "0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "equal_literals" (formula "13") (term "1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0,0,0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                      (rule "replaceKnownSelect_taclet11000000011001_10" (formula "21") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet11000000011001_11" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "21") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                                      (rule "add_literals" (formula "21") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "21") (term "0,1"))
                                                      (rule "qeq_literals" (formula "21") (term "1"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "allLeft" (formula "21") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet100011000000011001_23" (formula "21") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100011000000011001_24" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "21") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "13") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet0011000000011001_18" (formula "13") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0011000000011001_19" (formula "13") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "13") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_literals" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                                (branch "n_0 = j_0 FALSE"
                                                   (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "m_0 = j_0 TRUE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "polySimp_homoEq" (formula "5") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0"))
                                                      (rule "equal_literals" (formula "5") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "inEqSimp_contradEq7" (formula "30") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "false_right" (formula "30"))
                                                      (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "leq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "false_right" (formula "27"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "allLeft" (formula "11") (inst "t=n_0"))
                                                      (rule "replaceKnownSelect_taclet0011000000011001_14" (formula "11") (term "0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0011000000011001_15" (formula "11") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "11") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                      (rule "replaceKnownSelect_taclet011001_4" (formula "11") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "11") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "11") (term "0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "11") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0"))
                                                      (rule "add_literals" (formula "11") (term "0"))
                                                      (rule "leq_literals" (formula "11"))
                                                      (rule "closeFalse" (formula "11"))
                                                   )
                                                   (branch "m_0 = j_0 FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "allLeft" (formula "13") (inst "t=n_0"))
                                                      (rule "replaceKnownSelect_taclet0011000000011001_14" (formula "13") (term "0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0011000000011001_15" (formula "13") (term "0,1,0"))
                                                      (rule "replace_known_right" (formula "13") (term "1,0,0,0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0,0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "m_0 = -1 + j_0 TRUE"
                                                         (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0"))
                                                         (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "5"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                         (rule "add_literals" (formula "3") (term "0,1"))
                                                         (rule "add_zero_left" (formula "3") (term "1"))
                                                         (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "5"))
                                                         (rule "polySimp_homoEq" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0"))
                                                         (rule "equal_literals" (formula "29"))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "false_right" (formula "31"))
                                                         (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "28"))
                                                         (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "false_right" (formula "28"))
                                                         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "allLeft" (formula "11") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                         (rule "replaceKnownSelect_taclet011001_4" (formula "11") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "11") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "11") (term "0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "10"))
                                                         (rule "qeq_literals" (formula "11") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "11") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "8"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0"))
                                                         (rule "add_literals" (formula "11") (term "0"))
                                                         (rule "leq_literals" (formula "11"))
                                                         (rule "closeFalse" (formula "11"))
                                                      )
                                                      (branch "m_0 = -1 + j_0 FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "allLeft" (formula "12") (inst "t=m_0"))
                                                         (rule "replaceKnownSelect_taclet0011000000011001_18" (formula "12") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011000000011001_19" (formula "12") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "12"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0"))
                                                         (rule "add_literals" (formula "5") (term "0"))
                                                         (rule "leq_literals" (formula "5"))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "24") (inst "sk=f_0"))
                                                (rule "allRight" (formula "24") (inst "sk=o_0"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "pullOutSelect" (formula "26") (term "1") (inst "selectSK=f_0_0"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                (rule "replaceKnownSelect_taclet1011000000011001_12" (formula "1") (term "2,0"))
                                                (rule "shift_paren_and" (formula "27"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                   (rule "replace_known_right" (formula "28") (term "0,1,0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "24")))
                                                   (rule "notRight" (formula "28"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "eqSymm" (formula "28"))
                                                   (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "23"))
                                                    (builtin "One Step Simplification" (formula "27"))
                                                   (rule "false_right" (formula "27"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "orRight" (formula "24"))
                                                      (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "23"))
                                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                                                      (rule "closeTrue" (formula "25"))
                                                   )
                                                   (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) FALSE"
                                                      (rule "close" (formula "28") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: seqPerm(seqDef{int u;}(0, self_25.a.length, any::select(heap[anon(self_25.a.*, anon_heap_LOOP_0<<anonHeapFunction>>)] [anon(self_25.a.*, anon_heap_LOOP_1<<anonHeapFunction>>)] [self_25.a[j_0] := (self_25.a@heap)[ -1 + j_0]@anon_heap_LOOP_1<<anonHeapFunction>>] [self_25.a[ -1 + j_0] := (self_25.a@heap)[j_0]@anon_heap_LOOP_1<<anonHeapFunction>>], self_25.a, arr(u))), seqDef{int u;}(0, self_25.a.length, self_25.a[u])) FALSE"
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "false_right" (formula "24"))
                                             (rule "seqPermFromSwap" (formula "23") (inst "iv=iv") (inst "jv=jv") (ifseqformula "7") (userinteraction))
                                             (rule "andRight" (formula "23") (userinteraction))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "closeTrue" (formula "23"))
                                             )
                                             (branch "Case 2"
                                                (rule "eqSymm" (formula "23") (term "1,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,1,0,0,1,0,0,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0,0"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,1,0,0,1,0,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,0"))
                                                (rule "eqSeqDef" (formula "23") (term "1,0,0") (inst "iv=iv_1"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "23") (term "1,1,0,1,1,0,0"))
                                                (rule "castDel" (formula "23") (term "2,1,1,0,1,1,0,0"))
                                                (rule "castDel" (formula "23") (term "1,1,1,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,0,1,1,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1,1,0,0"))
                                                (rule "lenOfSwap" (formula "23") (term "1,1,0,0,1,1,0,0"))
                                                (rule "lenOfSwap" (formula "23") (term "0,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,1,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,1,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,1,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "0,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "times_zero_2" (formula "23") (term "1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1,0,0"))
                                                (rule "replace_known_left" (formula "23") (term "0,1,1,1,0,0,1,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "getOfSwap" (formula "23") (term "0,1,0,1,0,0"))
                                                (rule "eqSymm" (formula "23") (term "0,2,2,0,1,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "23") (term "2,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "2,2,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "1,2,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,2,1,2,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "23") (term "1,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "1,1,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "2,1,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,2,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,0,1,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,0,1,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "23") (term "1,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "2,1,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "1,1,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,2,1,1,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,0,1,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,0,1,2,0,1,0,1,0,0"))
                                                (rule "getOfSeqDef" (formula "23") (term "1,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "2,1,2,2,0,1,0,1,0,0"))
                                                (rule "castDel" (formula "23") (term "1,1,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,2,1,1,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,0,1,2,2,0,1,0,1,0,0"))
                                                (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "1,1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,2,2,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,1,0,1,0,0"))
                                                (rule "ifthenelse_negated" (formula "23") (term "0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,2,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,2,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,2,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,2,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,0,1,0,0"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,0,1,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,0,1,0,0"))
                                                (rule "replace_known_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,0,1,0,0") (ifseqformula "20"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,2,1,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1,0,0"))
                                                (rule "nnf_ex2all" (formula "23"))
                                                (rule "nnf_notEx" (formula "1") (term "0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                (rule "nnf_notAll" (formula "1") (term "1,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "nnf_imp2or" (formula "1") (term "0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_and" (formula "1") (term "0,0,1,0,0"))
                                                (rule "ex_pull_out3" (formula "1") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "allLeft" (formula "1") (inst "t=j_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,0,1,0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "0,1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "7"))
                                                (rule "leq_literals" (formula "1") (term "0,0,1,2,1,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,1,0,0,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "7"))
                                                (rule "qeq_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "1,2,1,0,0,0,0,0,0,0,0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "equal_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "allLeft" (formula "2") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_invertInEq1" (formula "2") (term "1,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,0,1,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "0,1,2,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0,0,1,2,1,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "pullOutSelect" (formula "2") (term "1,2,1,0,0,0,0,0,0,0,0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfStore" (formula "2"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "castDel" (formula "2") (term "0"))
                                                (rule "applyEqReverse" (formula "3") (term "1,2,1,0,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "1,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,1,1,0,0,0,0"))
                                                (rule "commute_and" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                (rule "commute_and" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,1,1,1,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,1,1,1,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "commute_and" (formula "1") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,1,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "ifthenelse_to_or_right2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "commute_and" (formula "2") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                (rule "applyEq_or_int7" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,1,0,1,0,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_and" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_notOr" (formula "1") (term "1,0,0,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,0,0,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,1,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq_or_int7" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,1,0,0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "nnf_notOr" (formula "2") (term "1,0,0,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,0,1,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,0,0,0,0,1,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,0,0,0,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,1,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,1,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,1,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,1,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_and" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,1,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "1,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq_or_int5" (formula "1") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0,1,0,1,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,0,1,1,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEq_or_int5" (formula "2") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,1,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0,1,0,1,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,1,0,0,0,0,0"))
                                                (rule "applyEq_or_int4" (formula "2") (term "0,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,1,0,0,0,1,0,1,0,0,0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0,0,1,0,1,0,0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,1,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "eqSymm" (formula "3") (term "0,1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,1,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,1,1,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,1,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,1,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "eqSymm" (formula "3") (term "0,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notOr" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,1,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,1,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,1,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,1,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notOr" (formula "2") (term "1,1,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,1,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,0,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "nnf_notOr" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int1" (formula "3") (term "1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,1,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,1,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,1,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq3" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int5" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int5" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "applyEq_or_int3" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_invertInEq1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,1,1,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "ifthenelse_to_or_left2" (formula "3") (term "0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "eqSymm" (formula "3") (term "0,1,1,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,1,1,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,1,1,1,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,1,1,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,1,0,0,0"))
                                                (rule "shift_paren_and" (formula "3") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,1,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "2") (term "0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,0,0,0,1,1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,0,0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_and" (formula "2") (term "0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int1" (formula "1") (term "0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "applyEq_or_int3" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,1,1,0,0,0,0,0,0,1,0,0"))
                                                (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0,0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "commute_or" (formula "1") (term "1,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "1") (term "1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,1,1,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,1,1,1,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,1,1,1,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,0,1,0,0,0,1,1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "0,1,0,0,0,1,1,1,0,0"))
                                                (rule "leq_literals" (formula "1") (term "1,0,0,0,1,1,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "shift_paren_or" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                                (rule "shift_paren_and" (formula "1") (term "0,0"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "qeq_literals" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_left2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_or" (formula "2") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "2") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "0,1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "shift_paren_or" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "2") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "2") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "2") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and" (formula "1") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "1") (term "0,0"))
                                                (rule "commute_and" (formula "2") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                                (rule "commute_and_2" (formula "2") (term "0,0"))
                                                (rule "commute_and" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "ifthenelse_to_or_right2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "cnf_rightDist" (formula "3") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "shift_paren_or" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "commute_or" (formula "3") (term "0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "3") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "allLeft" (formula "1") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet1111000000011001_12" (formula "1") (term "0,0,0,0,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111000000011001_14" (formula "1") (term "0,0,0,0,0,1,0"))
                                                (rule "exLeft" (formula "1") (inst "sk=iv_1_0"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "eqSymm" (formula "10") (term "0,0,0,0"))
                                                (rule "eqSymm" (formula "10") (term "0,1,0,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,0,0"))
                                                (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                                                (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                (rule "eqSymm" (formula "6") (term "1,0,0,0,0"))
                                                (rule "eqSymm" (formula "5") (term "1,0,0,0"))
                                                (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "5") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,1"))
                                                (rule "leq_literals" (formula "10") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "leq_literals" (formula "3") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "15"))
                                                (rule "qeq_literals" (formula "7") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "12"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "2") (term "0,0,1"))
                                                (rule "leq_literals" (formula "2") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "1") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "3") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=arr_6"))
                                                (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "narrowSelectArrayType" (formula "4") (term "0,0,0") (ifseqformula "15") (ifseqformula "29"))
                                                (rule "eqSymm" (formula "4") (term "0,0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "1,0,0") (ifseqformula "15") (ifseqformula "29"))
                                                (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=arr_7"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_8"))
                                                (rule "simplifySelectOfStore" (formula "3"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replaceKnownSelect_taclet1111000000011001_17" (formula "3") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1111000000011001_18" (formula "3") (term "2,0"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "17") (ifseqformula "31"))
                                                (rule "commute_or" (formula "6"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "j_0 = iv_1_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "notLeft" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "applyEqRigid" (formula "10") (term "0,2,1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "18") (term "0,2,1,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "10") (term "1,0,2,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "1,0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,0,2,2,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "16") (term "1,0,2,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16"))
                                                   (rule "applyEq" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "27") (term "1,0,2,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "1,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "7") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "7") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_homoEq" (formula "4") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "equal_literals" (formula "4") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "1,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,1,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "1,0,2,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,2,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "6") (term "0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "5") (term "1,1,1,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "4") (term "1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15"))
                                                   (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "8"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "leq_literals" (formula "26") (term "0"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "false_right" (formula "26"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                                                   (rule "mul_literals" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "allLeft" (formula "15") (inst "t=iv_1_0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "15") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "15") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_9"))
                                                   (rule "simplifySelectOfAnon" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                                                   (rule "hideAuxiliaryEq" (formula "15"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15"))
                                                   (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                   (rule "add_literals" (formula "15") (term "1,0"))
                                                   (rule "times_zero_1" (formula "15") (term "0"))
                                                   (rule "qeq_literals" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "allLeft" (formula "16") (inst "t=iv_1_0"))
                                                   (rule "replaceKnownSelect_taclet01111000000011001_23" (formula "16") (term "0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01111000000011001_24" (formula "16") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0,0,0") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "allLeft" (formula "15") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                                                   (rule "add_literals" (formula "15") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "15") (term "1,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "15") (term "0"))
                                                   (rule "mul_literals" (formula "15") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_10"))
                                                   (rule "simplifySelectOfAnon" (formula "15"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                                                   (rule "hideAuxiliaryEq" (formula "15"))
                                                   (rule "allLeft" (formula "3") (inst "t=iv_1_0"))
                                                   (rule "exLeft" (formula "3") (inst "sk=iv_1_1"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "eqSymm" (formula "11") (term "1"))
                                                   (rule "eqSymm" (formula "10") (term "1"))
                                                   (rule "eqSymm" (formula "9") (term "1"))
                                                   (rule "eqSymm" (formula "8") (term "1"))
                                                   (rule "eqSymm" (formula "7") (term "1"))
                                                   (rule "eqSymm" (formula "6") (term "1"))
                                                   (rule "eqSymm" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "6") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "5") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "6") (term "0,1,0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "4") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "12") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "12") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "4") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "4") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "5") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "5") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "3") (term "0,1,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "5") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "pullOutSelect" (formula "6") (term "0,0,0") (inst "selectSK=arr_11"))
                                                   (rule "simplifySelectOfStore" (formula "6"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "castDel" (formula "6") (term "1,0"))
                                                   (rule "eqSymm" (formula "7") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "equal_literals" (formula "6") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "simplifySelectOfStore" (formula "6"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "castDel" (formula "6") (term "0"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "pullOutSelect" (formula "5") (term "0,0,0") (inst "selectSK=arr_12"))
                                                   (rule "simplifySelectOfStore" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "castDel" (formula "5") (term "1,0"))
                                                   (rule "eqSymm" (formula "6") (term "0,0"))
                                                   (rule "eqSymm" (formula "5") (term "0,0"))
                                                   (rule "pullOutSelect" (formula "7") (term "0,0,0") (inst "selectSK=arr_13"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                                   (rule "simplifySelectOfAnon" (formula "7"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "6") (term "0,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "narrowSelectArrayType" (formula "6") (term "0,0,0") (ifseqformula "17") (ifseqformula "31"))
                                                   (rule "eqSymm" (formula "6") (term "0,0"))
                                                   (rule "narrowSelectArrayType" (formula "7") (term "0,0,0") (ifseqformula "17") (ifseqformula "31"))
                                                   (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_14"))
                                                   (rule "simplifySelectOfStore" (formula "5"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replaceKnownSelect_taclet01111000000011001_31" (formula "5") (term "2,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet01111000000011001_32" (formula "5") (term "2,0"))
                                                   (rule "castDel" (formula "5") (term "1,0"))
                                                   (rule "eqSymm" (formula "5") (term "0,0"))
                                                   (rule "narrowSelectArrayType" (formula "5") (term "2,0") (ifseqformula "18") (ifseqformula "32"))
                                                   (rule "commute_or" (formula "8"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "iv_1_1 = iv_1_0 TRUE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                                      (rule "polySimp_homoEq" (formula "6") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "equal_literals" (formula "6") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "5"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                                                      (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "leq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "false_right" (formula "27"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                      (rule "exLeft" (formula "5") (inst "sk=iv_1_2"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "eqSymm" (formula "13") (term "1"))
                                                      (rule "eqSymm" (formula "12") (term "1"))
                                                      (rule "eqSymm" (formula "11") (term "1"))
                                                      (rule "eqSymm" (formula "10") (term "1"))
                                                      (rule "eqSymm" (formula "9") (term "1"))
                                                      (rule "eqSymm" (formula "8") (term "1"))
                                                      (rule "eqSymm" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "13") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "10") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "14") (term "1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "7") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "7") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "6") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "6") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "20"))
                                                      (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "19"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "11") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "17"))
                                                      (rule "qeq_literals" (formula "6") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "pullOutSelect" (formula "8") (term "1,0,0") (inst "selectSK=arr_15"))
                                                      (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                                      (rule "simplifySelectOfAnon" (formula "8"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "9") (term "1,0,0") (ifseqformula "8"))
                                                      (rule "applyEqReverse" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "narrowSelectArrayType" (formula "8") (term "1,0,0") (ifseqformula "17") (ifseqformula "31"))
                                                      (rule "narrowSelectArrayType" (formula "7") (term "1,0,0") (ifseqformula "17") (ifseqformula "31"))
                                                      (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_16"))
                                                      (rule "simplifySelectOfStore" (formula "8"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "castDel" (formula "8") (term "0"))
                                                      (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "eqSymm" (formula "8") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "7") (term "0,0,0") (inst "selectSK=arr_17"))
                                                      (rule "simplifySelectOfStore" (formula "7"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "castDel" (formula "7") (term "1,0"))
                                                      (rule "eqSymm" (formula "7") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_18"))
                                                      (rule "simplifySelectOfStore" (formula "7"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replaceKnownSelect_taclet001111000000011001_36" (formula "7") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001111000000011001_37" (formula "7") (term "2,0"))
                                                      (rule "castDel" (formula "7") (term "1,0"))
                                                      (rule "eqSymm" (formula "7") (term "0,0"))
                                                      (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "19") (ifseqformula "33"))
                                                      (rule "commute_or" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "7") (term "0"))
                                                      (branch "iv_1_2 = iv_1_0 TRUE"
                                                         (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "7"))
                                                         (rule "polySimp_homoEq" (formula "10") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "10") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                                                         (rule "polySimp_homoEq" (formula "9") (term "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,1"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,1"))
                                                         (rule "add_literals" (formula "9") (term "0,1"))
                                                         (rule "equal_literals" (formula "9") (term "1"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "notLeft" (formula "9"))
                                                         (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                         (rule "polySimp_homoEq" (formula "7") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "7") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "eqSymm" (formula "28"))
                                                         (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "6"))
                                                         (rule "eqSymm" (formula "28"))
                                                         (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "10"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "false_right" (formula "28"))
                                                         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "12"))
                                                         (rule "leq_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                         (rule "replaceKnownSelect_taclet001111000000011001_38" (formula "4") (term "0,0,0,0,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet001111000000011001_39" (formula "4") (term "0,0,0,0,0,1,0"))
                                                         (rule "exLeft" (formula "4") (inst "sk=iv_1_3"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "eqSymm" (formula "13") (term "0,0,0,0"))
                                                         (rule "eqSymm" (formula "12") (term "1"))
                                                         (rule "eqSymm" (formula "11") (term "1"))
                                                         (rule "eqSymm" (formula "10") (term "1"))
                                                         (rule "eqSymm" (formula "9") (term "1"))
                                                         (rule "eqSymm" (formula "8") (term "1"))
                                                         (rule "eqSymm" (formula "7") (term "1"))
                                                         (rule "eqSymm" (formula "4") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "13") (term "1,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "6") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "13") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "21"))
                                                         (rule "qeq_literals" (formula "5") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "replace_known_left" (formula "9") (term "1,0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "6") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "7") (term "0,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_19"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                         (rule "simplifySelectOfAnon" (formula "8"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                         (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                         (rule "applyEqReverse" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "narrowSelectArrayType" (formula "4") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                         (rule "narrowSelectArrayType" (formula "8") (term "0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                         (rule "narrowSelectArrayType" (formula "7") (term "1,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                         (rule "pullOutSelect" (formula "7") (term "0,0,0,0") (inst "selectSK=arr_20"))
                                                         (rule "simplifySelectOfStore" (formula "7"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "castDel" (formula "7") (term "1,0"))
                                                         (rule "eqSymm" (formula "7") (term "0,0"))
                                                         (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_21"))
                                                         (rule "simplifySelectOfStore" (formula "7"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replaceKnownSelect_taclet0001111000000011001_44" (formula "7") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0001111000000011001_45" (formula "7") (term "2,0"))
                                                         (rule "castDel" (formula "7") (term "1,0"))
                                                         (rule "eqSymm" (formula "7") (term "0,0"))
                                                         (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "21") (ifseqformula "35"))
                                                         (rule "commute_or_2" (formula "4"))
                                                         (rule "commute_or" (formula "10"))
                                                         (rule "commute_or_2" (formula "9"))
                                                         (rule "commute_or" (formula "4") (term "0"))
                                                         (rule "commute_or_2" (formula "4"))
                                                         (rule "ifthenelse_split" (formula "7") (term "0"))
                                                         (branch "iv_1_3 = iv_1_0 TRUE"
                                                            (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "applyEqRigid" (formula "31") (term "0,2,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "closeTrue" (formula "31"))
                                                         )
                                                         (branch "iv_1_3 = iv_1_0 FALSE"
                                                            (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "33"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "32"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "iv_1_3 = -1 + iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "eqSymm" (formula "8") (term "0,0"))
                                                               (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "notLeft" (formula "4"))
                                                               (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "closeTrue" (formula "30"))
                                                            )
                                                            (branch "iv_1_3 = -1 + iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
                                                               (rule "closeFalse" (formula "8"))
                                                            )
                                                         )
                                                      )
                                                      (branch "iv_1_2 = iv_1_0 FALSE"
                                                         (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "ifthenelse_split" (formula "7") (term "0"))
                                                         (branch "iv_1_2 = -1 + iv_1_0 TRUE"
                                                            (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "0,0"))
                                                            (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "notLeft" (formula "9"))
                                                            (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "30")))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "7"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                            (rule "add_literals" (formula "6") (term "0,1"))
                                                            (rule "add_zero_left" (formula "6") (term "1"))
                                                            (rule "applyEq" (formula "30") (term "0") (ifseqformula "7"))
                                                            (rule "polySimp_homoEq" (formula "30"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0"))
                                                            (rule "add_literals" (formula "30") (term "0"))
                                                            (rule "equal_literals" (formula "30"))
                                                            (rule "false_right" (formula "30"))
                                                            (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "7"))
                                                            (rule "applyEqRigid" (formula "29") (term "0,2,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "mul_literals" (formula "5") (term "1"))
                                                            (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "10"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0"))
                                                            (rule "leq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "false_right" (formula "28"))
                                                            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "qeq_literals" (formula "5") (term "0"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                            (rule "replaceKnownSelect_taclet001111000000011001_38" (formula "4") (term "0,0,0,0,0,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet001111000000011001_39" (formula "4") (term "0,0,0,0,0,1,0"))
                                                            (rule "exLeft" (formula "4") (inst "sk=iv_1_3"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "eqSymm" (formula "13") (term "0,0,0,0"))
                                                            (rule "eqSymm" (formula "12") (term "1"))
                                                            (rule "eqSymm" (formula "11") (term "1"))
                                                            (rule "eqSymm" (formula "10") (term "1"))
                                                            (rule "eqSymm" (formula "9") (term "1"))
                                                            (rule "eqSymm" (formula "8") (term "1"))
                                                            (rule "eqSymm" (formula "7") (term "1"))
                                                            (rule "eqSymm" (formula "4") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "12") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "10") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "13") (term "1,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "5") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "6") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "5") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "replace_known_left" (formula "10") (term "1,0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "10") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "6") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_19"))
                                                            (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                            (rule "simplifySelectOfAnon" (formula "8"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "applyEqReverse" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "narrowSelectArrayType" (formula "4") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                            (rule "narrowSelectArrayType" (formula "8") (term "0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                            (rule "narrowSelectArrayType" (formula "7") (term "1,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                            (rule "pullOutSelect" (formula "7") (term "0,0,0,0") (inst "selectSK=arr_20"))
                                                            (rule "simplifySelectOfStore" (formula "7"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "castDel" (formula "7") (term "1,0"))
                                                            (rule "eqSymm" (formula "7") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_21"))
                                                            (rule "simplifySelectOfStore" (formula "7"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replaceKnownSelect_taclet01001111000000011001_44" (formula "7") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01001111000000011001_45" (formula "7") (term "2,0"))
                                                            (rule "castDel" (formula "7") (term "1,0"))
                                                            (rule "eqSymm" (formula "7") (term "0,0"))
                                                            (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "21") (ifseqformula "35"))
                                                            (rule "commute_or_2" (formula "4"))
                                                            (rule "commute_or" (formula "10"))
                                                            (rule "commute_or_2" (formula "9"))
                                                            (rule "commute_or" (formula "4") (term "0"))
                                                            (rule "commute_or_2" (formula "4"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "iv_1_3 = iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "notLeft" (formula "10"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "applyEq" (formula "31") (term "0,2,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "closeTrue" (formula "31"))
                                                            )
                                                            (branch "iv_1_3 = iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "iv_1_3 = -1 + iv_1_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "eqSymm" (formula "8") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "notLeft" (formula "4"))
                                                                  (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,2,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "closeTrue" (formula "30"))
                                                               )
                                                               (branch "iv_1_3 = -1 + iv_1_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
                                                                  (rule "closeFalse" (formula "8"))
                                                               )
                                                            )
                                                         )
                                                         (branch "iv_1_2 = -1 + iv_1_0 FALSE"
                                                            (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")))
                                                            (rule "closeFalse" (formula "8"))
                                                         )
                                                      )
                                                   )
                                                   (branch "iv_1_1 = iv_1_0 FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "6") (term "1") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "notLeft" (formula "6"))
                                                      (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "30"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "iv_1_1 = -1 + iv_1_0 TRUE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "28"))
                                                         (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "5"))
                                                         (rule "polySimp_homoEq" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0"))
                                                         (rule "add_literals" (formula "29") (term "0"))
                                                         (rule "equal_literals" (formula "29"))
                                                         (rule "false_right" (formula "29"))
                                                         (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "5"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                         (rule "add_literals" (formula "4") (term "0,1"))
                                                         (rule "add_zero_left" (formula "4") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "9"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0"))
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "false_right" (formula "27"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "allLeft" (formula "5") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                         (rule "exLeft" (formula "5") (inst "sk=iv_1_2"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "eqSymm" (formula "13") (term "1"))
                                                         (rule "eqSymm" (formula "12") (term "1"))
                                                         (rule "eqSymm" (formula "11") (term "1"))
                                                         (rule "eqSymm" (formula "10") (term "1"))
                                                         (rule "eqSymm" (formula "9") (term "1"))
                                                         (rule "eqSymm" (formula "8") (term "1"))
                                                         (rule "eqSymm" (formula "5") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                         (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "14") (term "1,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0"))
                                                         (rule "mul_literals" (formula "7") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                         (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "20"))
                                                         (rule "qeq_literals" (formula "14") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "20"))
                                                         (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "7") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "6") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "20"))
                                                         (rule "qeq_literals" (formula "6") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "replace_known_left" (formula "11") (term "1,0,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "17"))
                                                         (rule "qeq_literals" (formula "7") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "9") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "9") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "5"))
                                                         (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "pullOutSelect" (formula "8") (term "1,0,0") (inst "selectSK=arr_15"))
                                                         (rule "applyEq" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                                         (rule "simplifySelectOfAnon" (formula "8"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "applyEqReverse" (formula "9") (term "1,0,0") (ifseqformula "8"))
                                                         (rule "applyEqReverse" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "narrowSelectArrayType" (formula "8") (term "1,0,0") (ifseqformula "17") (ifseqformula "31"))
                                                         (rule "narrowSelectArrayType" (formula "7") (term "1,0,0") (ifseqformula "17") (ifseqformula "31"))
                                                         (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_16"))
                                                         (rule "simplifySelectOfStore" (formula "8"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "castDel" (formula "8") (term "0"))
                                                         (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "eqSymm" (formula "8") (term "0,0"))
                                                         (rule "pullOutSelect" (formula "7") (term "0,0,0") (inst "selectSK=arr_17"))
                                                         (rule "simplifySelectOfStore" (formula "7"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "castDel" (formula "7") (term "1,0"))
                                                         (rule "eqSymm" (formula "7") (term "0,0"))
                                                         (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_18"))
                                                         (rule "simplifySelectOfStore" (formula "7"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replaceKnownSelect_taclet0101111000000011001_36" (formula "7") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0101111000000011001_37" (formula "7") (term "2,0"))
                                                         (rule "castDel" (formula "7") (term "1,0"))
                                                         (rule "eqSymm" (formula "7") (term "0,0"))
                                                         (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "19") (ifseqformula "33"))
                                                         (rule "commute_or" (formula "10"))
                                                         (rule "ifthenelse_split" (formula "7") (term "0"))
                                                         (branch "iv_1_2 = iv_1_0 TRUE"
                                                            (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "applyEq" (formula "10") (term "0,2,0,0,1") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "31"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "eqSymm" (formula "8") (term "0,0"))
                                                            (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "30"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "notLeft" (formula "8"))
                                                            (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "7"))
                                                            (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "6"))
                                                            (rule "polySimp_homoEq" (formula "29"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0"))
                                                            (rule "add_literals" (formula "29") (term "0"))
                                                            (rule "equal_literals" (formula "29"))
                                                            (rule "false_right" (formula "29"))
                                                            (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "6"))
                                                            (rule "eqSymm" (formula "28"))
                                                            (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "10"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0"))
                                                            (rule "leq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "false_right" (formula "28"))
                                                            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "5") (term "0"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                            (rule "replaceKnownSelect_taclet0101111000000011001_38" (formula "4") (term "0,0,0,0,0,1,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0101111000000011001_39" (formula "4") (term "0,0,0,0,0,1,0"))
                                                            (rule "exLeft" (formula "4") (inst "sk=iv_1_3"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "eqSymm" (formula "13") (term "0,0,0,0"))
                                                            (rule "eqSymm" (formula "12") (term "1"))
                                                            (rule "eqSymm" (formula "11") (term "1"))
                                                            (rule "eqSymm" (formula "10") (term "1"))
                                                            (rule "eqSymm" (formula "9") (term "1"))
                                                            (rule "eqSymm" (formula "8") (term "1"))
                                                            (rule "eqSymm" (formula "7") (term "1"))
                                                            (rule "eqSymm" (formula "4") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "12") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "10") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                            (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "13") (term "1,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "5") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "5") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "13") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "6") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "21"))
                                                            (rule "qeq_literals" (formula "5") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "replace_known_left" (formula "10") (term "1,0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "6") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "8") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "4") (term "0,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "7") (term "0,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_19"))
                                                            (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                            (rule "simplifySelectOfAnon" (formula "8"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                            (rule "applyEqReverse" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "narrowSelectArrayType" (formula "4") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                            (rule "narrowSelectArrayType" (formula "8") (term "0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                            (rule "narrowSelectArrayType" (formula "7") (term "1,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                            (rule "pullOutSelect" (formula "7") (term "0,0,0,0") (inst "selectSK=arr_20"))
                                                            (rule "simplifySelectOfStore" (formula "7"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "castDel" (formula "7") (term "1,0"))
                                                            (rule "eqSymm" (formula "7") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_21"))
                                                            (rule "simplifySelectOfStore" (formula "7"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replaceKnownSelect_taclet00101111000000011001_44" (formula "7") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00101111000000011001_45" (formula "7") (term "2,0"))
                                                            (rule "castDel" (formula "7") (term "1,0"))
                                                            (rule "eqSymm" (formula "7") (term "0,0"))
                                                            (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "21") (ifseqformula "35"))
                                                            (rule "commute_or_2" (formula "4"))
                                                            (rule "commute_or" (formula "10"))
                                                            (rule "commute_or_2" (formula "9"))
                                                            (rule "commute_or" (formula "4") (term "0"))
                                                            (rule "commute_or_2" (formula "4"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "iv_1_3 = iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "notLeft" (formula "10"))
                                                               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEq" (formula "31") (term "0,2,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "31"))
                                                               (rule "closeTrue" (formula "31"))
                                                            )
                                                            (branch "iv_1_3 = iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "iv_1_3 = -1 + iv_1_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "eqSymm" (formula "8") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "notLeft" (formula "4"))
                                                                  (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "6"))
                                                                  (rule "polySimp_homoEq" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,0"))
                                                                  (rule "add_literals" (formula "31") (term "0"))
                                                                  (rule "equal_literals" (formula "31"))
                                                                  (rule "false_right" (formula "31"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,2,0") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "closeTrue" (formula "30"))
                                                               )
                                                               (branch "iv_1_3 = -1 + iv_1_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
                                                                  (rule "closeFalse" (formula "8"))
                                                               )
                                                            )
                                                         )
                                                         (branch "iv_1_2 = iv_1_0 FALSE"
                                                            (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "iv_1_2 = -1 + iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "eqSymm" (formula "8") (term "0,0"))
                                                               (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "notLeft" (formula "8"))
                                                               (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "7"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                               (rule "add_literals" (formula "6") (term "0,1"))
                                                               (rule "add_zero_left" (formula "6") (term "1"))
                                                               (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "7"))
                                                               (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "7"))
                                                               (rule "polySimp_homoEq" (formula "30"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "30") (term "1,0"))
                                                               (rule "add_literals" (formula "30") (term "0"))
                                                               (rule "equal_literals" (formula "30"))
                                                               (rule "false_right" (formula "30"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "mul_literals" (formula "5") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "10"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                               (rule "add_literals" (formula "28") (term "0,0"))
                                                               (rule "leq_literals" (formula "28") (term "0"))
                                                                (builtin "One Step Simplification" (formula "28"))
                                                               (rule "false_right" (formula "28"))
                                                               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "allLeft" (formula "4") (inst "t=add(Z(neglit(1(#))), iv_1_0)"))
                                                               (rule "replaceKnownSelect_taclet0101111000000011001_38" (formula "4") (term "0,0,0,0,0,1,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet0101111000000011001_39" (formula "4") (term "0,0,0,0,0,1,0"))
                                                               (rule "exLeft" (formula "4") (inst "sk=iv_1_3"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "eqSymm" (formula "13") (term "0,0,0,0"))
                                                               (rule "eqSymm" (formula "12") (term "1"))
                                                               (rule "eqSymm" (formula "11") (term "1"))
                                                               (rule "eqSymm" (formula "10") (term "1"))
                                                               (rule "eqSymm" (formula "9") (term "1"))
                                                               (rule "eqSymm" (formula "8") (term "1"))
                                                               (rule "eqSymm" (formula "7") (term "1"))
                                                               (rule "eqSymm" (formula "4") (term "0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                               (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                               (rule "add_zero_left" (formula "13") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "11") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "10") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "7") (term "0,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                               (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,1,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                               (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "13") (term "1,0"))
                                                               (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "12") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "6") (term "1,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                               (rule "inEqSimp_invertInEq1" (formula "5") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "5") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0,1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "5") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "6") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "6") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "21"))
                                                               (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                               (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "13") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "13") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "21"))
                                                               (rule "qeq_literals" (formula "6") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "18"))
                                                               (rule "qeq_literals" (formula "9") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "18"))
                                                               (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "18"))
                                                               (rule "qeq_literals" (formula "10") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "18"))
                                                               (rule "qeq_literals" (formula "5") (term "0,1"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "7") (term "0,1,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "4") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "pullOutSelect" (formula "8") (term "0,0,0") (inst "selectSK=arr_19"))
                                                               (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                               (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                               (rule "simplifySelectOfAnon" (formula "8"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                               (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                               (rule "applyEqReverse" (formula "7") (term "1,0,0,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "narrowSelectArrayType" (formula "7") (term "1,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                               (rule "narrowSelectArrayType" (formula "8") (term "0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                               (rule "narrowSelectArrayType" (formula "4") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "33"))
                                                               (rule "pullOutSelect" (formula "7") (term "0,0,0,0") (inst "selectSK=arr_20"))
                                                               (rule "simplifySelectOfStore" (formula "7"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "castDel" (formula "7") (term "1,0"))
                                                               (rule "eqSymm" (formula "7") (term "0,0"))
                                                               (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=arr_21"))
                                                               (rule "simplifySelectOfStore" (formula "7"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replaceKnownSelect_taclet010101111000000011001_44" (formula "7") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet010101111000000011001_45" (formula "7") (term "2,0"))
                                                               (rule "castDel" (formula "7") (term "1,0"))
                                                               (rule "eqSymm" (formula "7") (term "0,0"))
                                                               (rule "narrowSelectArrayType" (formula "7") (term "2,0") (ifseqformula "21") (ifseqformula "35"))
                                                               (rule "commute_or" (formula "10"))
                                                               (rule "commute_or_2" (formula "4"))
                                                               (rule "commute_or_2" (formula "9"))
                                                               (rule "commute_or" (formula "4") (term "0"))
                                                               (rule "commute_or_2" (formula "4"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "iv_1_3 = iv_1_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "notLeft" (formula "10"))
                                                                  (rule "replace_known_left" (formula "4") (term "1,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "6"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                                                  (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "5"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "closeTrue" (formula "30"))
                                                               )
                                                               (branch "iv_1_3 = iv_1_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "33"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                  (branch "iv_1_3 = -1 + iv_1_0 TRUE"
                                                                     (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                     (rule "hideAuxiliaryEq" (formula "8"))
                                                                     (rule "eqSymm" (formula "8") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "true_left" (formula "8"))
                                                                     (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "notLeft" (formula "4"))
                                                                     (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "6"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                                     (rule "add_literals" (formula "5") (term "0,1"))
                                                                     (rule "add_zero_left" (formula "5") (term "1"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                                                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "6"))
                                                                     (rule "polySimp_homoEq" (formula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                                     (rule "add_literals" (formula "31") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "31") (term "1,0"))
                                                                     (rule "add_literals" (formula "31") (term "0"))
                                                                     (rule "equal_literals" (formula "31"))
                                                                     (rule "false_right" (formula "31"))
                                                                     (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "6"))
                                                                      (builtin "One Step Simplification" (formula "30"))
                                                                     (rule "closeTrue" (formula "30"))
                                                                  )
                                                                  (branch "iv_1_3 = -1 + iv_1_0 FALSE"
                                                                     (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
                                                                     (rule "closeFalse" (formula "8"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "iv_1_2 = -1 + iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "31")))
                                                               (rule "closeFalse" (formula "8"))
                                                            )
                                                         )
                                                      )
                                                      (branch "iv_1_1 = -1 + iv_1_0 FALSE"
                                                         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "29"))
                                                         (rule "closeTrue" (formula "29"))
                                                      )
                                                   )
                                                )
                                                (branch "j_0 = iv_1_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "29"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "j_0 = 1 + iv_1_0 TRUE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "0,0,0"))
                                                      (rule "applyEq" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "4") (term "1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                      (rule "add_literals" (formula "8") (term "0,1"))
                                                      (rule "applyEq" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "9") (term "1,0,2,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,2,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,2,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0,2,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "applyEq" (formula "5") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "17") (term "0,2,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,2,3,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,3,0,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "3"))
                                                      (rule "polySimp_homoEq" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0"))
                                                      (rule "add_literals" (formula "28") (term "0"))
                                                      (rule "equal_literals" (formula "28"))
                                                      (rule "false_right" (formula "28"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "0,2,3,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "6") (term "1,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "6") (term "1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "16") (term "0,2,1") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0"))
                                                      (rule "applyEq" (formula "5") (term "0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "16") (term "1,0,2,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,2,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,2,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0,2,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,0,0,0,0,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "5") (term "1,0,2,3,0,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,3,0,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,3,0,0,0,0,0,0,0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,0,0,0,0,0,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,2,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,2,0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "0,2,0,0,0,0,0,0,1,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "9") (term "0,2,1,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,1,1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "1,0,2,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "4") (term "1,1,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,1,0,1,0,0,1,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,0,1,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "5") (term "1,1,1,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "4") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,0,0,0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,1,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "1,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "5") (term "0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "6") (term "1,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,2,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,1,0,0,0,0,1,0,0,0,0,0,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,0") (ifseqformula "3"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "1,1,0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,1,1,0,0,0,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_invertInEq0" (formula "11"))
                                                      (rule "mul_literals" (formula "11") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0"))
                                                      (rule "qeq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "false_right" (formula "26"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "16") (inst "t=iv_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "pullOutSelect" (formula "16") (term "1,1,0") (inst "selectSK=arr_9"))
                                                      (rule "simplifySelectOfAnon" (formula "16"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "16"))
                                                      (rule "hideAuxiliaryEq" (formula "16"))
                                                      (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), iv_1_0)"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0,0,0,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "pullOutSelect" (formula "17") (term "1,1,0") (inst "selectSK=arr_10"))
                                                      (rule "simplifySelectOfAnon" (formula "17"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "17"))
                                                      (rule "hideAuxiliaryEq" (formula "17"))
                                                      (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), iv_1_0)"))
                                                      (rule "replaceKnownSelect_taclet011111000000011001_25" (formula "15") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011111000000011001_26" (formula "15") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "15") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                                                      (rule "add_literals" (formula "15") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "15") (term "0,1"))
                                                      (rule "qeq_literals" (formula "15") (term "1"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "allLeft" (formula "15") (inst "t=iv_1_0"))
                                                      (rule "replaceKnownSelect_taclet011111000000011001_23" (formula "15") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011111000000011001_24" (formula "15") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                                                      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "allLeft" (formula "16") (inst "t=iv_1_0"))
                                                      (rule "replaceKnownSelect_taclet011111000000011001_23" (formula "16") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011111000000011001_24" (formula "16") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "16") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                                                      (rule "add_literals" (formula "16") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "16") (term "0,1"))
                                                      (rule "qeq_literals" (formula "16") (term "1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "allLeft" (formula "4") (inst "t=iv_1_0"))
                                                      (rule "exLeft" (formula "4") (inst "sk=iv_1_1"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "eqSymm" (formula "12") (term "1"))
                                                      (rule "eqSymm" (formula "11") (term "1"))
                                                      (rule "eqSymm" (formula "10") (term "1"))
                                                      (rule "eqSymm" (formula "9") (term "1"))
                                                      (rule "eqSymm" (formula "8") (term "1"))
                                                      (rule "eqSymm" (formula "7") (term "1"))
                                                      (rule "eqSymm" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "7") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "4") (term "1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "5") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "12") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "6") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "5") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "13") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "13") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "6") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "6") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "1") (ifseqformula "14"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "5") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "5") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0,0,0") (ifseqformula "5"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "1,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "4") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "6") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "pullOutSelect" (formula "7") (term "1,0,0") (inst "selectSK=arr_11"))
                                                      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "7"))
                                                      (rule "simplifySelectOfAnon" (formula "7"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqReverse" (formula "6") (term "1,0,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "narrowSelectArrayType" (formula "6") (term "1,0,0") (ifseqformula "16") (ifseqformula "31"))
                                                      (rule "narrowSelectArrayType" (formula "7") (term "1,0,0") (ifseqformula "16") (ifseqformula "31"))
                                                      (rule "pullOutSelect" (formula "7") (term "0,0,0") (inst "selectSK=arr_12"))
                                                      (rule "simplifySelectOfStore" (formula "7"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "castDel" (formula "7") (term "0"))
                                                      (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "eqSymm" (formula "7") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "6") (term "0,0,0") (inst "selectSK=arr_13"))
                                                      (rule "simplifySelectOfStore" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "castDel" (formula "6") (term "1,0"))
                                                      (rule "eqSymm" (formula "6") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=arr_14"))
                                                      (rule "simplifySelectOfStore" (formula "6"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replaceKnownSelect_taclet011111000000011001_27" (formula "6") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet011111000000011001_28" (formula "6") (term "2,0"))
                                                      (rule "castDel" (formula "6") (term "1,0"))
                                                      (rule "eqSymm" (formula "6") (term "0,0"))
                                                      (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "18") (ifseqformula "33"))
                                                      (rule "commute_or" (formula "9"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "iv_1_1 = 1 + iv_1_0 TRUE"
                                                         (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "6"))
                                                         (rule "polySimp_homoEq" (formula "8") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,1"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,1"))
                                                         (rule "add_literals" (formula "8") (term "0,1"))
                                                         (rule "equal_literals" (formula "8") (term "1"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "notLeft" (formula "8"))
                                                         (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                         (rule "polySimp_homoEq" (formula "7") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "7") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "eqSymm" (formula "30"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                         (rule "polySimp_homoEq" (formula "7") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "7") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "6"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                         (rule "add_literals" (formula "5") (term "0,1"))
                                                         (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "mul_literals" (formula "4") (term "1"))
                                                         (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "10"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "false_right" (formula "28"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "4") (term "0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "allLeft" (formula "5") (inst "t=add(Z(1(#)), iv_1_0)"))
                                                         (rule "exLeft" (formula "5") (inst "sk=iv_1_2"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "eqSymm" (formula "13") (term "1"))
                                                         (rule "eqSymm" (formula "12") (term "1"))
                                                         (rule "eqSymm" (formula "11") (term "1"))
                                                         (rule "eqSymm" (formula "10") (term "1"))
                                                         (rule "eqSymm" (formula "9") (term "1"))
                                                         (rule "eqSymm" (formula "8") (term "1"))
                                                         (rule "eqSymm" (formula "5") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "11") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "10") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "7") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "7") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "6") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "9") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "14") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "14") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "7") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "15"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "6") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "9") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "5") (term "0,1,0,0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "8") (term "0,1,0,0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "pullOutSelect" (formula "9") (term "0,0,0") (inst "selectSK=arr_15"))
                                                         (rule "simplifySelectOfStore" (formula "9"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "castDel" (formula "9") (term "1,0"))
                                                         (rule "eqSymm" (formula "10") (term "0,0"))
                                                         (rule "polySimp_homoEq" (formula "9") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "9") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "simplifySelectOfStore" (formula "9"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "castDel" (formula "9") (term "0"))
                                                         (rule "applyEqReverse" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                                         (rule "hideAuxiliaryEq" (formula "9"))
                                                         (rule "pullOutSelect" (formula "8") (term "0,0,0,0") (inst "selectSK=arr_16"))
                                                         (rule "simplifySelectOfStore" (formula "8"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "castDel" (formula "8") (term "1,0"))
                                                         (rule "eqSymm" (formula "9") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "8") (term "0,0"))
                                                         (rule "pullOutSelect" (formula "5") (term "0,0,0,0") (inst "selectSK=arr_17"))
                                                         (rule "applyEq" (formula "10") (term "0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "5"))
                                                         (rule "simplifySelectOfAnon" (formula "5"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "10") (term "0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "11") (term "0,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "narrowSelectArrayType" (formula "9") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "34"))
                                                         (rule "eqSymm" (formula "9") (term "0,0,0"))
                                                         (rule "narrowSelectArrayType" (formula "5") (term "0,0,0,0") (ifseqformula "19") (ifseqformula "34"))
                                                         (rule "narrowSelectArrayType" (formula "10") (term "0,0,0") (ifseqformula "19") (ifseqformula "34"))
                                                         (rule "pullOutSelect" (formula "8") (term "2,0") (inst "selectSK=arr_18"))
                                                         (rule "simplifySelectOfStore" (formula "8"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replaceKnownSelect_taclet0011111000000011001_39" (formula "8") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011111000000011001_40" (formula "8") (term "2,0"))
                                                         (rule "castDel" (formula "8") (term "1,0"))
                                                         (rule "eqSymm" (formula "8") (term "0,0"))
                                                         (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "20") (ifseqformula "35"))
                                                         (rule "commute_or" (formula "11"))
                                                         (rule "commute_or" (formula "5") (term "0"))
                                                         (rule "commute_or_2" (formula "5"))
                                                         (rule "applyEq_or_gen0" (formula "5") (term "0"))
                                                         (rule "polySimp_homoEq" (formula "5") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "equal_literals" (formula "5") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "8") (term "0"))
                                                         (branch "iv_1_2 = 1 + iv_1_0 TRUE"
                                                            (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                            (rule "hideAuxiliaryEq" (formula "9"))
                                                            (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "8"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "notLeft" (formula "5"))
                                                            (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "applyEq" (formula "32") (term "0,2,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "closeTrue" (formula "32"))
                                                         )
                                                         (branch "iv_1_2 = 1 + iv_1_0 FALSE"
                                                            (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "33"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "iv_1_2 = iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "eqSymm" (formula "8") (term "0,0"))
                                                               (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "notLeft" (formula "9"))
                                                               (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "7"))
                                                               (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "7"))
                                                               (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "29"))
                                                               (rule "closeTrue" (formula "29"))
                                                            )
                                                            (branch "iv_1_2 = iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
                                                               (rule "closeFalse" (formula "8"))
                                                            )
                                                         )
                                                      )
                                                      (branch "iv_1_1 = 1 + iv_1_0 FALSE"
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "iv_1_1 = iv_1_0 TRUE"
                                                            (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "eqSymm" (formula "7") (term "0,0"))
                                                            (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "notLeft" (formula "8"))
                                                            (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "30")))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "30") (term "0") (ifseqformula "6"))
                                                            (rule "polySimp_homoEq" (formula "30"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0"))
                                                            (rule "add_literals" (formula "30") (term "0"))
                                                            (rule "equal_literals" (formula "30"))
                                                            (rule "false_right" (formula "30"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "5"))
                                                            (rule "eqSymm" (formula "28"))
                                                            (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "10"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0"))
                                                            (rule "qeq_literals" (formula "28") (term "0"))
                                                             (builtin "One Step Simplification" (formula "28"))
                                                            (rule "false_right" (formula "28"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "9"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "allLeft" (formula "5") (inst "t=add(Z(1(#)), iv_1_0)"))
                                                            (rule "exLeft" (formula "5") (inst "sk=iv_1_2"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "eqSymm" (formula "13") (term "1"))
                                                            (rule "eqSymm" (formula "12") (term "1"))
                                                            (rule "eqSymm" (formula "11") (term "1"))
                                                            (rule "eqSymm" (formula "10") (term "1"))
                                                            (rule "eqSymm" (formula "9") (term "1"))
                                                            (rule "eqSymm" (formula "8") (term "1"))
                                                            (rule "eqSymm" (formula "5") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "5") (term "1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "14") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "14") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "6") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "6") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "11") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (term "1") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "6") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "replace_known_left" (formula "10") (term "1,0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "10") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "7") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "7") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "9") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0,0,0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "5") (term "0,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0,0,0") (ifseqformula "6"))
                                                            (rule "qeq_literals" (formula "8") (term "0,1,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "5") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "5") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "pullOutSelect" (formula "9") (term "0,0,0") (inst "selectSK=arr_15"))
                                                            (rule "simplifySelectOfStore" (formula "9"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "castDel" (formula "9") (term "1,0"))
                                                            (rule "eqSymm" (formula "10") (term "0,0"))
                                                            (rule "polySimp_homoEq" (formula "9") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "9") (term "0,0,0"))
                                                            (rule "equal_literals" (formula "9") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "simplifySelectOfStore" (formula "9"))
                                                             (builtin "One Step Simplification" (formula "9"))
                                                            (rule "castDel" (formula "9") (term "0"))
                                                            (rule "applyEqReverse" (formula "10") (term "1,0,0") (ifseqformula "9"))
                                                            (rule "hideAuxiliaryEq" (formula "9"))
                                                            (rule "pullOutSelect" (formula "5") (term "0,0,0,0") (inst "selectSK=arr_16"))
                                                            (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "5"))
                                                            (rule "simplifySelectOfAnon" (formula "5"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "5"))
                                                            (rule "applyEqReverse" (formula "10") (term "0,0,0") (ifseqformula "5"))
                                                            (rule "applyEqReverse" (formula "9") (term "1,0,0,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "narrowSelectArrayType" (formula "5") (term "0,0,0,0") (ifseqformula "18") (ifseqformula "33"))
                                                            (rule "narrowSelectArrayType" (formula "8") (term "1,0,0,0") (ifseqformula "18") (ifseqformula "33"))
                                                            (rule "narrowSelectArrayType" (formula "9") (term "0,0,0") (ifseqformula "18") (ifseqformula "33"))
                                                            (rule "pullOutSelect" (formula "8") (term "0,0,0,0") (inst "selectSK=arr_17"))
                                                            (rule "simplifySelectOfStore" (formula "8"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "castDel" (formula "8") (term "1,0"))
                                                            (rule "eqSymm" (formula "8") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "8") (term "2,0") (inst "selectSK=arr_18"))
                                                            (rule "simplifySelectOfStore" (formula "8"))
                                                             (builtin "One Step Simplification" (formula "8"))
                                                            (rule "replaceKnownSelect_taclet01011111000000011001_38" (formula "8") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet01011111000000011001_39" (formula "8") (term "2,0"))
                                                            (rule "castDel" (formula "8") (term "1,0"))
                                                            (rule "eqSymm" (formula "8") (term "0,0"))
                                                            (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "20") (ifseqformula "35"))
                                                            (rule "commute_or" (formula "11"))
                                                            (rule "commute_or" (formula "5") (term "0"))
                                                            (rule "commute_or_2" (formula "5"))
                                                            (rule "applyEq_or_gen0" (formula "5") (term "0"))
                                                            (rule "polySimp_homoEq" (formula "5") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "equal_literals" (formula "5") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "ifthenelse_split" (formula "8") (term "0"))
                                                            (branch "iv_1_2 = 1 + iv_1_0 TRUE"
                                                               (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "notLeft" (formula "5"))
                                                               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "applyEqRigid" (formula "32") (term "0,2,0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "32"))
                                                               (rule "closeTrue" (formula "32"))
                                                            )
                                                            (branch "iv_1_2 = 1 + iv_1_0 FALSE"
                                                               (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "33"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "32"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "ifthenelse_split" (formula "7") (term "0"))
                                                               (branch "iv_1_2 = iv_1_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "9") (term "0,0,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "eqSymm" (formula "8") (term "0,0"))
                                                                  (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "notLeft" (formula "9"))
                                                                  (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "applyEqRigid" (formula "30") (term "0,2,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "closeTrue" (formula "30"))
                                                               )
                                                               (branch "iv_1_2 = iv_1_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "8") (term "0,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "32")))
                                                                  (rule "closeFalse" (formula "8"))
                                                               )
                                                            )
                                                         )
                                                         (branch "iv_1_1 = iv_1_0 FALSE"
                                                            (rule "applyEqReverse" (formula "7") (term "0,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "31")))
                                                            (rule "closeFalse" (formula "7"))
                                                         )
                                                      )
                                                   )
                                                   (branch "j_0 = 1 + iv_1_0 FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeTrue" (formula "28"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (x_arr_10 = null)"
                                    (rule "false_right" (formula "22"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_10 != null, but x_15 Out of Bounds!)"
                                     (builtin "One Step Simplification" (formula "22"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "false_right" (formula "22"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "4"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0"))
                                    (rule "add_zero_right" (formula "8") (term "0"))
                                    (rule "leq_literals" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                              )
                              (branch "Null Reference (x_arr_6 = null)"
                                  (builtin "One Step Simplification" (formula "22"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_6 != null, but x_12 Out of Bounds!)"
                                 (rule "false_right" (formula "22"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "8"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "Null Reference (x_arr_8 = null)"
                              (rule "false_right" (formula "22"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_8 != null, but x_14 Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "22"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "false_right" (formula "22"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "add_zero_left" (formula "1") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                              (rule "mul_literals" (formula "8") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "8"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                        (branch "Null Reference (x_arr_4 = null)"
                           (rule "false_right" (formula "22"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_4 != null, but j Out of Bounds!)"
                           (rule "false_right" (formula "22"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "1") (term "0,1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "1"))
                           (rule "mul_literals" (formula "18") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                           (rule "mul_literals" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "4"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                     )
                     (branch "if x_6 false"
                         (builtin "One Step Simplification" (formula "21"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                        (rule "elim_double_block_2" (formula "21") (term "1"))
                        (rule "blockBreak" (formula "21") (term "1"))
                        (rule "lsBreak" (formula "21") (term "1"))
                        (rule "assignment" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "postincrement" (formula "21") (term "1"))
                        (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x_2"))
                        (rule "variableDeclarationAssign" (formula "21") (term "1"))
                        (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_12"))
                        (rule "remove_parentheses_right" (formula "21") (term "1"))
                        (rule "assignmentAdditionInt" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "21") (term "1"))
                        (rule "assignment" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "blockEmpty" (formula "21") (term "1"))
                        (rule "lsContinue" (formula "21") (term "1"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "5")))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,1,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,1,0,1"))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "1,1,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "1,0,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "1,1,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "1,0,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "21") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "21") (term "0,1,1,0,0,0,0,1,0,0"))
                        (rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
                        (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,0,0,1"))
                        (rule "precOfInt" (formula "21") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1"))
                        (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "21") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                        (rule "add_literals" (formula "21") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "21") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,1"))
                        (rule "add_literals" (formula "21") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "21") (term "0,1,1"))
                        (rule "leq_literals" (formula "21") (term "1,1"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                        (rule "mul_literals" (formula "21") (term "1,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                        (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_invertInEq0" (formula "21") (term "0,0"))
                        (rule "mul_literals" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "21") (term "0,0") (ifseqformula "8"))
                        (rule "leq_literals" (formula "21") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "10") (term "0") (ifseqformula "14"))
                        (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,0"))
                        (rule "array2seqDef" (formula "10") (term "0") (inst "u=u"))
                        (rule "Class_invariant_axiom_for_com_key_InsertionSort" (formula "18") (ifseqformula "14"))
                        (rule "notLeft" (formula "18"))
                        (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "10") (term "1") (ifseqformula "14"))
                        (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "10") (term "2,1") (ifseqformula "12") (ifseqformula "19"))
                        (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "5") (term "0") (ifseqformula "14"))
                        (rule "replaceKnownSelect_taclet1001_2" (formula "5") (term "1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "5") (term "1,0"))
                        (rule "array2seqDef" (formula "5") (term "0") (inst "u=u"))
                        (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "5") (term "1") (ifseqformula "14"))
                        (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "5") (term "2,1") (ifseqformula "12") (ifseqformula "19"))
                        (rule "andRight" (formula "20"))
                        (branch "Case 1"
                           (rule "allRight" (formula "20") (inst "sk=n_0"))
                           (rule "allRight" (formula "20") (inst "sk=m_0"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "23"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "24"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnon" (formula "5"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnon" (formula "5"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                           (rule "mul_literals" (formula "3") (term "0,0"))
                           (rule "add_zero_left" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "15"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "10") (inst "t=add(Z(neglit(1(#))), j_0)"))
                           (rule "replaceKnownSelect_taclet011001_4" (formula "10") (term "0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "10") (term "0,1,0"))
                           (rule "polySimp_homoEq" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0,0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,1,0,0,0"))
                           (rule "equal_literals" (formula "10") (term "1,0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (term "1,0,0,0") (ifseqformula "9"))
                           (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "10") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "allLeft" (formula "16") (inst "t=n_0"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "pullOutSelect" (formula "16") (term "1,1,0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnon" (formula "16"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "commute_or_2" (formula "16") (term "0,0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "cut_direct" (formula "16") (term "1,0"))
                           (branch "CUT: n_0 >= i_0 TRUE"
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "5"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_commuteGeq" (formula "2"))
                              (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "14"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                              (rule "add_literals" (formula "14") (term "1,0"))
                              (rule "times_zero_1" (formula "14") (term "0"))
                              (rule "leq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "allLeft" (formula "8") (inst "t=m_0"))
                              (rule "replaceKnownSelect_taclet010011001_10" (formula "8") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "8") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0,0,0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "8") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "commute_or_2" (formula "8") (term "0,0"))
                              (rule "commute_or_2" (formula "8") (term "0"))
                              (rule "cut_direct" (formula "8") (term "1,0"))
                              (branch "CUT: m_0 = j_0 TRUE"
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "allLeft" (formula "13") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "13") (term "1,1,0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnon" (formula "13"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                 (rule "hideAuxiliaryEq" (formula "13"))
                                 (rule "commute_or_2" (formula "13") (term "0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "13") (term "0,0"))
                                 (rule "cut_direct" (formula "13") (term "1,0"))
                                 (branch "CUT: self_25.a.length <= j_0 TRUE"
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "13"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "10"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_literals" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "CUT: self_25.a.length <= j_0 FALSE"
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_leqRight" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "cut_direct" (formula "14") (term "1,0"))
                                    (branch "CUT: j_0 >= i_0 TRUE"
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "5"))
                                       (rule "applyEq" (formula "6") (term "1,0,2,1,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: j_0 >= i_0 FALSE"
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_geqRight" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "5") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0"))
                                       (rule "leq_literals" (formula "14") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "14") (term "0"))
                                       (rule "mul_literals" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "14") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnon" (formula "14"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "allLeft" (formula "15") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet00010011001_14" (formula "15") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00010011001_15" (formula "15") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1"))
                                       (rule "add_literals" (formula "15") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "15") (term "0,1"))
                                       (rule "qeq_literals" (formula "15") (term "1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "allLeft" (formula "9") (inst "t=i_0"))
                                       (rule "eqSymm" (formula "9") (term "1,0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "9") (term "1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradEq3" (formula "9") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,1,0,0,0"))
                                       (rule "qeq_literals" (formula "9") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "pullOutSelect" (formula "9") (term "1,1,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "9"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "allLeft" (formula "9") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet0011001_6" (formula "9") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0011001_7" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "9") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "9") (term "0,0,1"))
                                       (rule "leq_literals" (formula "9") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                 )
                              )
                              (branch "CUT: m_0 = j_0 FALSE"
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "allLeft" (formula "15") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "15") (term "1,1,0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnon" (formula "15"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                 (rule "hideAuxiliaryEq" (formula "15"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0,0"))
                                 (rule "cut_direct" (formula "15") (term "1,0"))
                                 (branch "CUT: self_25.a.length <= j_0 TRUE"
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                    (rule "mul_literals" (formula "24") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "15"))
                                    (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "6"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "closeFalse" (formula "12"))
                                 )
                                 (branch "CUT: self_25.a.length <= j_0 FALSE"
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "cut_direct" (formula "16") (term "1,0"))
                                    (branch "CUT: j_0 >= i_0 TRUE"
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "7"))
                                       (rule "applyEq" (formula "5") (term "1,0,2,0") (ifseqformula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,0"))
                                       (rule "times_zero_1" (formula "15") (term "0"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,0"))
                                       (rule "times_zero_1" (formula "5") (term "0"))
                                       (rule "qeq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEqRigid" (formula "5") (term "1,1,1,0,0") (ifseqformula "13"))
                                       (rule "applyEqRigid" (formula "5") (term "1,0,2,1,1,0") (ifseqformula "13"))
                                       (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "13"))
                                       (rule "inEqSimp_commuteGeq" (formula "4"))
                                       (rule "applyEq" (formula "7") (term "1,1,0,0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "23") (term "1") (ifseqformula "13"))
                                       (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "23"))
                                       (rule "inEqSimp_contradEq3" (formula "23") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0"))
                                       (rule "qeq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "false_right" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "commute_or_2" (formula "7") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_weaken3" (formula "7") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "allLeft" (formula "14") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0,0,0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "pullOutSelect" (formula "14") (term "1,1,0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnon" (formula "14"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "allLeft" (formula "15") (inst "t=m_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "pullOutSelect" (formula "15") (term "1,1,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "15"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                       (rule "hideAuxiliaryEq" (formula "15"))
                                       (rule "commute_or_2" (formula "15") (term "0,0"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "cut_direct" (formula "15") (term "1,0"))
                                       (branch "CUT: self_25.a.length <= m_0 TRUE"
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "15"))
                                          (rule "mul_literals" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                          (rule "mul_literals" (formula "24") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "14"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_literals" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                       (branch "CUT: self_25.a.length <= m_0 FALSE"
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_leqRight" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "allLeft" (formula "15") (inst "t=m_0"))
                                          (rule "replaceKnownSelect_taclet0110010011001_18" (formula "15") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0110010011001_19" (formula "15") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                          (rule "replaceKnownSelect_taclet0110010011001_16" (formula "16") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0110010011001_17" (formula "16") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,1,0"))
                                          (rule "leq_literals" (formula "16") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                                          (rule "add_literals" (formula "16") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "0,1"))
                                          (rule "qeq_literals" (formula "16") (term "1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "allLeft" (formula "17") (inst "t=m_0"))
                                          (rule "replaceKnownSelect_taclet0110010011001_18" (formula "17") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0110010011001_19" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,1,0"))
                                          (rule "leq_literals" (formula "17") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1"))
                                          (rule "add_literals" (formula "17") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "0,1"))
                                          (rule "qeq_literals" (formula "17") (term "1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "8") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "8") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "8") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "pullOutSelect" (formula "8") (term "1,1,0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfAnon" (formula "8"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "allLeft" (formula "6") (inst "t=m_0"))
                                          (rule "replaceKnownSelect_taclet010011001_10" (formula "6") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "6") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "cut_direct" (formula "6") (term "0"))
                                          (branch "CUT: m_0 >= -1 + i_0 TRUE"
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                                             (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "qeq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqRigid" (formula "8") (term "1,1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "16"))
                                             (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "1,0"))
                                             (rule "times_zero_1" (formula "16") (term "0"))
                                             (rule "qeq_literals" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "applyEqRigid" (formula "17") (term "0,2,1,1,0") (ifseqformula "5"))
                                             (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "5"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                             (rule "add_literals" (formula "1") (term "0,1"))
                                             (rule "add_zero_left" (formula "1") (term "1"))
                                             (rule "applyEqRigid" (formula "8") (term "0,2,1,1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "5"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: m_0 >= -1 + i_0 FALSE"
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "7"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_literals" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                    )
                                    (branch "CUT: j_0 >= i_0 FALSE"
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_geqRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "7") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "allLeft" (formula "16") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet10010011001_14" (formula "16") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10010011001_15" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                                       (rule "add_literals" (formula "16") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "0,1"))
                                       (rule "qeq_literals" (formula "16") (term "1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0"))
                                       (rule "leq_literals" (formula "16") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "16") (term "0"))
                                       (rule "mul_literals" (formula "16") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "16") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnon" (formula "16"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                       (rule "hideAuxiliaryEq" (formula "16"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "replaceKnownSelect_taclet1110010011001_16" (formula "18") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1110010011001_17" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "allLeft" (formula "19") (inst "t=m_0"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "19") (term "1,1,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "19"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "19"))
                                       (rule "hideAuxiliaryEq" (formula "19"))
                                       (rule "commute_or_2" (formula "19") (term "0,0"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "19") (term "0,0"))
                                       (rule "allLeft" (formula "9") (inst "t=m_0"))
                                       (rule "replaceKnownSelect_taclet010011001_10" (formula "9") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "cut_direct" (formula "20") (term "1,0"))
                                       (branch "CUT: self_25.a.length <= m_0 TRUE"
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "3"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "inEqSimp_homoInEq1" (formula "15"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0"))
                                          (rule "add_zero_right" (formula "15") (term "0"))
                                          (rule "leq_literals" (formula "15"))
                                          (rule "closeFalse" (formula "15"))
                                       )
                                       (branch "CUT: self_25.a.length <= m_0 FALSE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "cut_direct" (formula "21") (term "1,0"))
                                          (branch "CUT: m_0 >= i_0 TRUE"
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "10") (term "0,2,0,1") (ifseqformula "21"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "1"))
                                             (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch "CUT: m_0 >= i_0 FALSE"
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_geqRight" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "5") (term "0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "allLeft" (formula "13") (inst "t=i_0"))
                                             (rule "eqSymm" (formula "13") (term "1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "13") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradEq3" (formula "13") (term "1,0,0,0") (ifseqformula "3"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,1,0,0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "pullOutSelect" (formula "13") (term "1,1,0") (inst "selectSK=arr_8"))
                                             (rule "simplifySelectOfAnon" (formula "13"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "replaceKnownSelect_taclet1110010011001_16" (formula "21") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110010011001_17" (formula "21") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "21") (term "0,1,0"))
                                             (rule "leq_literals" (formula "21") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                             (rule "add_literals" (formula "21") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "21") (term "0,1"))
                                             (rule "qeq_literals" (formula "21") (term "1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "12") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet0011001_6" (formula "12") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0011001_7" (formula "12") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "replaceKnownSelect_taclet011001_4" (formula "13") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "13") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_invertInEq1" (formula "13") (term "0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "allLeft" (formula "22") (inst "t=m_0"))
                                             (rule "replaceKnownSelect_taclet1110010011001_18" (formula "22") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110010011001_19" (formula "22") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "cut_direct" (formula "10") (term "0"))
                                             (branch "CUT: m_0 >= -1 + j_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "allLeft" (formula "25") (inst "t=m_0"))
                                                (rule "replaceKnownSelect_taclet1110010011001_18" (formula "25") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110010011001_19" (formula "25") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,1,0"))
                                                (rule "leq_literals" (formula "25") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1"))
                                                (rule "add_literals" (formula "25") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "25") (term "0,1"))
                                                (rule "qeq_literals" (formula "25") (term "1"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "allLeft" (formula "15") (inst "t=m_0"))
                                                (rule "replaceKnownSelect_taclet010011001_10" (formula "15") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "15") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "15") (term "0,0,1"))
                                                (rule "leq_literals" (formula "15") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                                                (rule "andLeft" (formula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0"))
                                                (rule "add_zero_right" (formula "15") (term "0"))
                                                (rule "leq_literals" (formula "15"))
                                                (rule "closeFalse" (formula "15"))
                                             )
                                             (branch "CUT: m_0 >= -1 + j_0 FALSE"
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_geqRight" (formula "35"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0"))
                                                (rule "qeq_literals" (formula "36") (term "0"))
                                                 (builtin "One Step Simplification" (formula "36"))
                                                (rule "false_right" (formula "36"))
                                                (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "leq_literals" (formula "23") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "inEqSimp_subsumption0" (formula "13") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_subsumption0" (formula "13") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "6") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "allLeft" (formula "26") (inst "t=m_0"))
                                                (rule "replaceKnownSelect_taclet1110010011001_18" (formula "26") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1110010011001_19" (formula "26") (term "0,1"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,1,0"))
                                                (rule "leq_literals" (formula "26") (term "1,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_homoInEq0" (formula "26") (term "1"))
                                                (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1"))
                                                (rule "add_literals" (formula "26") (term "1,0,1"))
                                                (rule "times_zero_1" (formula "26") (term "0,1"))
                                                (rule "qeq_literals" (formula "26") (term "1"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "allLeft" (formula "16") (inst "t=m_0"))
                                                (rule "replaceKnownSelect_taclet010011001_10" (formula "16") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "16") (term "1,0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "16") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "16") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "16"))
                                                (rule "andLeft" (formula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0"))
                                                (rule "add_literals" (formula "11") (term "0"))
                                                (rule "leq_literals" (formula "11"))
                                                (rule "closeFalse" (formula "11"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: n_0 >= i_0 FALSE"
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "allLeft" (formula "16") (inst "t=m_0"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "16") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "leq_literals" (formula "16") (term "0,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_5"))
                              (rule "simplifySelectOfAnon" (formula "16"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                              (rule "hideAuxiliaryEq" (formula "16"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "allLeft" (formula "11") (inst "t=m_0"))
                              (rule "replaceKnownSelect_taclet010011001_10" (formula "11") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "11") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                              (rule "leq_literals" (formula "11") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "commute_or_2" (formula "11") (term "0,0"))
                              (rule "commute_or_2" (formula "11") (term "0"))
                              (rule "cut_direct" (formula "11") (term "1,0"))
                              (branch "CUT: m_0 = j_0 TRUE"
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEqRigid" (formula "6") (term "0,2,1,1") (ifseqformula "11"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "11"))
                                 (rule "applyEqRigid" (formula "17") (term "0,2,1") (ifseqformula "11"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "11"))
                                 (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0"))
                                 (rule "qeq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "mul_literals" (formula "7") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "allLeft" (formula "17") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "pullOutSelect" (formula "17") (term "1,1,0") (inst "selectSK=arr_6"))
                                 (rule "simplifySelectOfAnon" (formula "17"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "commute_or_2" (formula "17") (term "0,0"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "allLeft" (formula "11") (inst "t=n_0"))
                                 (rule "replaceKnownSelect_taclet010011001_8" (formula "11") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet010011001_9" (formula "11") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0,0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "11") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "pullOutSelect" (formula "19") (term "1,1,0") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfAnon" (formula "19"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "19"))
                                 (rule "hideAuxiliaryEq" (formula "19"))
                                 (rule "commute_or_2" (formula "19") (term "0,0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                 (rule "replaceKnownSelect_taclet01010011001_18" (formula "17") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01010011001_19" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "allLeft" (formula "18") (inst "t=j_0"))
                                 (rule "replaceKnownSelect_taclet01010011001_16" (formula "18") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01010011001_17" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "1"))
                                 (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "cut_direct" (formula "19") (term "1,0"))
                                 (branch "CUT: self_25.a.length <= j_0 TRUE"
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "12") (term "1,0") (ifseqformula "4"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                    (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "CUT: self_25.a.length <= j_0 FALSE"
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_leqRight" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "21") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "cut_direct" (formula "12") (term "1,0"))
                                    (branch "CUT: n_0 = j_0 TRUE"
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "11"))
                                       (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,0"))
                                       (rule "times_zero_1" (formula "15") (term "0"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0,2,0") (ifseqformula "10"))
                                       (rule "inEqSimp_commuteGeq" (formula "15"))
                                       (rule "applyEqRigid" (formula "16") (term "1,1,1,0,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_literals" (formula "4") (term "0"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "CUT: n_0 = j_0 FALSE"
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "31"))
                                       (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "allLeft" (formula "19") (inst "t=n_0"))
                                       (rule "replaceKnownSelect_taclet010011001_12" (formula "19") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "19") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1"))
                                       (rule "add_literals" (formula "19") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "19") (term "0,1"))
                                       (rule "qeq_literals" (formula "19") (term "1"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "allLeft" (formula "12") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "replaceKnownSelect_taclet011001_4" (formula "12") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "12") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "12") (term "0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "6"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "replaceKnownSelect_taclet01010011001_18" (formula "22") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet01010011001_19" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
                                       (rule "add_literals" (formula "22") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "0,1"))
                                       (rule "qeq_literals" (formula "22") (term "1"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "replaceKnownSelect_taclet01010011001_18" (formula "21") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet01010011001_19" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,1,0"))
                                       (rule "leq_literals" (formula "21") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_invertInEq1" (formula "21") (term "0"))
                                       (rule "mul_literals" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "allLeft" (formula "22") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet01010011001_16" (formula "22") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet01010011001_17" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
                                       (rule "add_literals" (formula "22") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "0,1"))
                                       (rule "qeq_literals" (formula "22") (term "1"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "allLeft" (formula "13") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet0011001_6" (formula "13") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0011001_7" (formula "13") (term "0,1"))
                                       (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "8"))
                                       (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "13") (term "0,0,1"))
                                       (rule "leq_literals" (formula "13") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "4"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "inEqSimp_homoInEq1" (formula "13"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0"))
                                       (rule "add_literals" (formula "13") (term "0"))
                                       (rule "leq_literals" (formula "13"))
                                       (rule "closeFalse" (formula "13"))
                                    )
                                 )
                              )
                              (branch "CUT: m_0 = j_0 FALSE"
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "allLeft" (formula "19") (inst "t=j_0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "19") (term "1,1,0") (inst "selectSK=arr_6"))
                                 (rule "simplifySelectOfAnon" (formula "19"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "19"))
                                 (rule "hideAuxiliaryEq" (formula "19"))
                                 (rule "commute_or_2" (formula "19") (term "0,0"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or_2" (formula "19") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "19") (term "0,0"))
                                 (rule "cut_direct" (formula "19") (term "1,0"))
                                 (branch "CUT: self_25.a.length <= j_0 TRUE"
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "19"))
                                    (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "9"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                    (rule "add_literals" (formula "15") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0"))
                                    (rule "add_zero_right" (formula "15") (term "0"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "closeFalse" (formula "15"))
                                 )
                                 (branch "CUT: self_25.a.length <= j_0 FALSE"
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "cut_direct" (formula "20") (term "1,0"))
                                    (branch "CUT: j_0 >= i_0 TRUE"
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "10"))
                                       (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,0"))
                                       (rule "times_zero_1" (formula "21") (term "0"))
                                       (rule "leq_literals" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq0" (formula "10"))
                                       (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "1,0"))
                                       (rule "times_zero_1" (formula "10") (term "0"))
                                       (rule "qeq_literals" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEqRigid" (formula "8") (term "1,0,2,0") (ifseqformula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "8"))
                                       (rule "applyEq" (formula "10") (term "1,0,2,1,1,0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "17"))
                                       (rule "inEqSimp_commuteGeq" (formula "7"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "27") (term "1") (ifseqformula "17"))
                                       (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                       (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0"))
                                       (rule "qeq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "false_right" (formula "27"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_weaken3" (formula "10") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "allLeft" (formula "18") (inst "t=m_0"))
                                       (rule "replaceKnownSelect_taclet1010011001_14" (formula "18") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "18") (term "0,1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "commute_or_2" (formula "18") (term "0,0"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "pullOutSelect" (formula "19") (term "1,1,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "19"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "19"))
                                       (rule "hideAuxiliaryEq" (formula "19"))
                                       (rule "cut_direct" (formula "18") (term "1,0"))
                                       (branch "CUT: self_25.a.length <= m_0 TRUE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "5"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_literals" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: self_25.a.length <= m_0 FALSE"
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "allLeft" (formula "17") (inst "t=n_0"))
                                          (rule "replaceKnownSelect_taclet010011001_12" (formula "17") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,1,0"))
                                          (rule "leq_literals" (formula "17") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1"))
                                          (rule "add_literals" (formula "17") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "0,1"))
                                          (rule "qeq_literals" (formula "17") (term "1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                          (rule "replaceKnownSelect_taclet0111010011001_18" (formula "20") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0111010011001_19" (formula "20") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "20") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "20") (term "0,1"))
                                          (rule "add_literals" (formula "20") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "20") (term "0,1"))
                                          (rule "qeq_literals" (formula "20") (term "1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "allLeft" (formula "19") (inst "t=m_0"))
                                          (rule "replaceKnownSelect_taclet1010011001_14" (formula "19") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "19") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "19") (term "0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1"))
                                          (rule "add_literals" (formula "19") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "0,1"))
                                          (rule "qeq_literals" (formula "19") (term "1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "20") (inst "t=m_0"))
                                          (rule "replaceKnownSelect_taclet1010011001_14" (formula "20") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "20") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                          (rule "replaceKnownSelect_taclet0111010011001_18" (formula "17") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0111010011001_19" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "17") (term "0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "15"))
                                          (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "allLeft" (formula "11") (inst "t=n_0"))
                                          (rule "replaceKnownSelect_taclet010011001_8" (formula "11") (term "0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_9" (formula "11") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0,0,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "11") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "allLeft" (formula "9") (inst "t=m_0"))
                                          (rule "replaceKnownSelect_taclet010011001_10" (formula "9") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "9") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                          (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "pullOutSelect" (formula "13") (term "1,1,0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfAnon" (formula "13"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "allLeft" (formula "10") (inst "t=n_0"))
                                          (rule "replaceKnownSelect_taclet010011001_8" (formula "10") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_9" (formula "10") (term "0,1"))
                                          (rule "allLeft" (formula "25") (inst "t=n_0"))
                                          (rule "replaceKnownSelect_taclet010011001_12" (formula "25") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "25") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), i_0)"))
                                          (rule "replaceKnownSelect_taclet0111010011001_18" (formula "23") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0111010011001_19" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "cut_direct" (formula "20") (term "0"))
                                          (branch "CUT: n_0 <= -2 + i_0 TRUE"
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "19"))
                                             (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "9") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "4") (term "0,0"))
                                             (rule "add_zero_left" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "22") (inst "t=n_0"))
                                             (rule "replaceKnownSelect_taclet010011001_12" (formula "22") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "22") (term "0,1"))
                                             (rule "cut_direct" (formula "25") (term "0"))
                                             (branch "CUT: n_0 <= -1 TRUE"
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "24"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "23"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                             (branch "CUT: n_0 <= -1 FALSE"
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "36"))
                                                 (builtin "One Step Simplification" (formula "22"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "26"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "allLeft" (formula "14") (inst "t=m_0"))
                                                (rule "replaceKnownSelect_taclet010011001_10" (formula "14") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "14") (term "0,0,1"))
                                                (rule "leq_literals" (formula "14") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "6"))
                                                (rule "qeq_literals" (formula "14") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "24"))
                                                (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "20"))
                                                (rule "inEqSimp_homoInEq0" (formula "25"))
                                                (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0"))
                                                (rule "qeq_literals" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "1,0"))
                                                (rule "times_zero_1" (formula "21") (term "0"))
                                                (rule "leq_literals" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "14"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "15") (term "0,2,1,1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "8"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0"))
                                                (rule "add_literals" (formula "8") (term "0"))
                                                (rule "qeq_literals" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                          )
                                          (branch "CUT: n_0 <= -2 + i_0 FALSE"
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_leqRight" (formula "37"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "27") (term "0,2,0,1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1"))
                                             (rule "add_literals" (formula "27") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "0,1"))
                                             (rule "qeq_literals" (formula "27") (term "1"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "applyEq" (formula "14") (term "0,2,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqRigid" (formula "18") (term "0,2,0") (ifseqformula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "18"))
                                             (rule "applyEqRigid" (formula "19") (term "1,1,1,0,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "19") (term "1,1,0,0"))
                                             (rule "applyEq" (formula "19") (term "0,2,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "17") (term "0,2,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "17"))
                                             (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "1,0"))
                                             (rule "times_zero_1" (formula "17") (term "0"))
                                             (rule "leq_literals" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "4"))
                                             (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                             (rule "add_literals" (formula "5") (term "0,1"))
                                             (rule "add_zero_left" (formula "5") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "7") (term "0,0,1"))
                                             (rule "leq_literals" (formula "7") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0"))
                                             (rule "leq_literals" (formula "16") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "18") (term "0,2,1,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "19"))
                                             (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "1,0"))
                                             (rule "times_zero_1" (formula "19") (term "0"))
                                             (rule "qeq_literals" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEqRigid" (formula "18") (term "1,1,1,0,0") (ifseqformula "7"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                             (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,0"))
                                             (rule "times_zero_1" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEqRigid" (formula "16") (term "0,2,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "16"))
                                             (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "1,0"))
                                             (rule "times_zero_1" (formula "16") (term "0"))
                                             (rule "leq_literals" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "7"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                             (rule "add_literals" (formula "2") (term "0,1"))
                                             (rule "add_zero_left" (formula "2") (term "1"))
                                             (rule "applyEqRigid" (formula "5") (term "0,2,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_literals" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                    )
                                    (branch "CUT: j_0 >= i_0 FALSE"
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_geqRight" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "14") (inst "t=n_0"))
                                       (rule "replaceKnownSelect_taclet010011001_8" (formula "14") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010011001_9" (formula "14") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0,0,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "commute_or_2" (formula "14") (term "0,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "pullOutSelect" (formula "22") (term "1,1,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnon" (formula "22"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "22"))
                                       (rule "hideAuxiliaryEq" (formula "22"))
                                       (rule "allLeft" (formula "23") (inst "t=m_0"))
                                       (rule "replaceKnownSelect_taclet1010011001_14" (formula "23") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "23") (term "0,1,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0,0,0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "commute_or_2" (formula "23") (term "0,0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "allLeft" (formula "21") (inst "t=j_0"))
                                       (rule "replaceKnownSelect_taclet11010011001_16" (formula "21") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet11010011001_17" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,1,0"))
                                       (rule "leq_literals" (formula "21") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                       (rule "add_literals" (formula "21") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "21") (term "0,1"))
                                       (rule "qeq_literals" (formula "21") (term "1"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "replaceKnownSelect_taclet1111010011001_18" (formula "21") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1111010011001_19" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,1,0"))
                                       (rule "leq_literals" (formula "21") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_invertInEq1" (formula "21") (term "0"))
                                       (rule "times_zero_2" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "allLeft" (formula "12") (inst "t=m_0"))
                                       (rule "replaceKnownSelect_taclet010011001_10" (formula "12") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "12") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "allLeft" (formula "13") (inst "t=n_0"))
                                       (rule "replaceKnownSelect_taclet010011001_8" (formula "13") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010011001_9" (formula "13") (term "0,1"))
                                       (rule "cut_direct" (formula "16") (term "1,0"))
                                       (branch "CUT: n_0 = j_0 TRUE"
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "13") (term "0,1,0"))
                                          (rule "leq_literals" (formula "13") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "20") (term "0,2,1,1,0") (ifseqformula "14"))
                                          (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "14"))
                                          (rule "applyEqRigid" (formula "6") (term "0,2,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "13"))
                                          (rule "inEqSimp_commuteGeq" (formula "4"))
                                          (rule "applyEqRigid" (formula "18") (term "0,2,0") (ifseqformula "13"))
                                          (rule "inEqSimp_commuteGeq" (formula "18"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                          (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "32"))
                                          (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "cut_direct" (formula "22") (term "1,0"))
                                          (branch "CUT: self_25.a.length <= m_0 TRUE"
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1"))
                                             (rule "mul_literals" (formula "17") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "17"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "mul_literals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_literals" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: self_25.a.length <= m_0 FALSE"
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_leqRight" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "21") (inst "t=m_0"))
                                             (rule "replaceKnownSelect_taclet1010011001_14" (formula "21") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "21") (term "0,1"))
                                             (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "19"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "22") (inst "t=m_0"))
                                             (rule "replaceKnownSelect_taclet1010011001_14" (formula "22") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "22") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0"))
                                             (rule "leq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "replaceKnownSelect_taclet1111010011001_18" (formula "23") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111010011001_19" (formula "23") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,1,0"))
                                             (rule "leq_literals" (formula "23") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                             (rule "add_literals" (formula "23") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "23") (term "0,1"))
                                             (rule "qeq_literals" (formula "23") (term "1"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "allLeft" (formula "24") (inst "t=m_0"))
                                             (rule "replaceKnownSelect_taclet1010011001_14" (formula "24") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "24") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,1,0"))
                                             (rule "leq_literals" (formula "24") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_homoInEq0" (formula "24") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1"))
                                             (rule "add_literals" (formula "24") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "0,1"))
                                             (rule "qeq_literals" (formula "24") (term "1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "cut_direct" (formula "11") (term "0"))
                                             (branch "CUT: m_0 >= -1 + j_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "5"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,0"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "25") (term "0,2,1,1,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "11"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                (rule "add_literals" (formula "1") (term "0,1"))
                                                (rule "add_zero_left" (formula "1") (term "1"))
                                                (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq1" (formula "12"))
                                                (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "1,0"))
                                                (rule "times_zero_1" (formula "12") (term "0"))
                                                (rule "leq_literals" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "11"))
                                                (rule "applyEqRigid" (formula "24") (term "1,1,1,0,0") (ifseqformula "11"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "24") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "qeq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "10"))
                                                (rule "applyEqRigid" (formula "12") (term "0,2,1,1,0") (ifseqformula "10"))
                                                (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "10"))
                                                (rule "inEqSimp_homoInEq0" (formula "19"))
                                                (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "1,0"))
                                                (rule "times_zero_1" (formula "19") (term "0"))
                                                (rule "qeq_literals" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "mul_literals" (formula "5") (term "1"))
                                                (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0"))
                                                (rule "add_literals" (formula "4") (term "0"))
                                                (rule "leq_literals" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                             (branch "CUT: m_0 >= -1 + j_0 FALSE"
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_geqRight" (formula "34"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "7"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0"))
                                                (rule "add_literals" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                          )
                                       )
                                       (branch "CUT: n_0 = j_0 FALSE"
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "replaceKnownSelect_taclet1111010011001_18" (formula "22") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1111010011001_19" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "23") (inst "t=n_0"))
                                          (rule "replaceKnownSelect_taclet010011001_12" (formula "23") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                          (rule "add_literals" (formula "23") (term "1,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "0,1"))
                                          (rule "qeq_literals" (formula "23") (term "1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "allLeft" (formula "23") (inst "t=j_0"))
                                          (rule "replaceKnownSelect_taclet11010011001_16" (formula "23") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet11010011001_17" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "cut_direct" (formula "28") (term "1,0"))
                                          (branch "CUT: self_25.a.length <= m_0 TRUE"
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "28"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "40") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "false_right" (formula "40"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "28"))
                                             (rule "mul_literals" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                             (rule "mul_literals" (formula "37") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "37"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "27"))
                                             (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "19"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0"))
                                             (rule "add_zero_right" (formula "5") (term "0"))
                                             (rule "leq_literals" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch "CUT: self_25.a.length <= m_0 FALSE"
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_leqRight" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "allLeft" (formula "16") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "replaceKnownSelect_taclet011001_4" (formula "16") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "16") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_invertInEq1" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "16") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "allLeft" (formula "17") (inst "t=j_0"))
                                             (rule "replaceKnownSelect_taclet0011001_6" (formula "17") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0011001_7" (formula "17") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "allLeft" (formula "30") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "replaceKnownSelect_taclet1111010011001_18" (formula "30") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111010011001_19" (formula "30") (term "0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "30") (term "0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,1,0"))
                                             (rule "leq_literals" (formula "30") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1"))
                                             (rule "add_literals" (formula "30") (term "1,0,1"))
                                             (rule "times_zero_1" (formula "30") (term "0,1"))
                                             (rule "qeq_literals" (formula "30") (term "1"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "allLeft" (formula "29") (inst "t=m_0"))
                                             (rule "replaceKnownSelect_taclet1010011001_14" (formula "29") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "29") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "29") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "allLeft" (formula "30") (inst "t=n_0"))
                                             (rule "replaceKnownSelect_taclet010011001_12" (formula "30") (term "0,1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "30") (term "0,1"))
                                             (rule "cut_direct" (formula "13") (term "0"))
                                             (branch "CUT: m_0 >= -1 + j_0 TRUE"
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "5"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "cut_direct" (formula "14") (term "0,0"))
                                                (branch "CUT: n_0 <= -1 TRUE"
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "closeFalse" (formula "8"))
                                                )
                                                (branch "CUT: n_0 <= -1 FALSE"
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_leqRight" (formula "43"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "13"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "cut_direct" (formula "26") (term "0"))
                                                   (branch "CUT: n_0 <= -2 + j_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "26"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0"))
                                                      (rule "qeq_literals" (formula "44") (term "0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_subsumption0" (formula "27") (term "0") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "27") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "26"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "30"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "25"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "27"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "8"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0"))
                                                      (rule "qeq_literals" (formula "44") (term "0"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "inEqSimp_subsumption0" (formula "18") (term "0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "15"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0"))
                                                      (rule "add_literals" (formula "8") (term "0"))
                                                      (rule "leq_literals" (formula "8"))
                                                      (rule "closeFalse" (formula "8"))
                                                   )
                                                   (branch "CUT: n_0 <= -2 + j_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_leqRight" (formula "44"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "34") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet1010011001_14" (formula "34") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "34") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,1,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "34") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "34") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "34") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1"))
                                                      (rule "add_literals" (formula "34") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "34") (term "0,1"))
                                                      (rule "qeq_literals" (formula "34") (term "1"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "cut_direct" (formula "27") (term "0"))
                                                      (branch "CUT: n_0 <= -1 + j_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "27"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0"))
                                                         (rule "qeq_literals" (formula "44") (term "0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "27"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "27"))
                                                         (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28"))
                                                         (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                                         (rule "add_literals" (formula "28") (term "1,0"))
                                                         (rule "times_zero_1" (formula "28") (term "0"))
                                                         (rule "qeq_literals" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "9"))
                                                         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "9"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "25"))
                                                         (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                                                         (rule "add_zero_left" (formula "27") (term "1,1,0,0"))
                                                         (rule "applyEqRigid" (formula "20") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "26") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "29") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "20") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "7"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,0"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                                         (rule "add_literals" (formula "10") (term "0,1"))
                                                         (rule "add_zero_left" (formula "10") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                         (rule "mul_literals" (formula "10") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                         (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "7"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                         (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                         (rule "add_literals" (formula "37") (term "0,0"))
                                                         (rule "qeq_literals" (formula "37") (term "0"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "false_right" (formula "37"))
                                                         (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_subsumption0" (formula "16") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "qeq_literals" (formula "9") (term "0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0"))
                                                         (rule "qeq_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "6"))
                                                         (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13"))
                                                         (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                         (rule "add_literals" (formula "13") (term "1,0"))
                                                         (rule "times_zero_1" (formula "13") (term "0"))
                                                         (rule "leq_literals" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "12"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                         (rule "add_literals" (formula "2") (term "0,1"))
                                                         (rule "add_zero_left" (formula "2") (term "1"))
                                                         (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19"))
                                                         (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                         (rule "add_literals" (formula "19") (term "1,0"))
                                                         (rule "times_zero_1" (formula "19") (term "0"))
                                                         (rule "qeq_literals" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "applyEq" (formula "14") (term "0,2,1,1,0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6"))
                                                         (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "0"))
                                                         (rule "qeq_literals" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0"))
                                                         (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "7"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "1,0"))
                                                         (rule "add_literals" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "closeFalse" (formula "7"))
                                                      )
                                                      (branch "CUT: n_0 <= -1 + j_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_leqRight" (formula "44"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "45"))
                                                         (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_contradEq7" (formula "44") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0"))
                                                         (rule "leq_literals" (formula "44") (term "0"))
                                                          (builtin "One Step Simplification" (formula "44"))
                                                         (rule "false_right" (formula "44"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0"))
                                                         (rule "qeq_literals" (formula "5") (term "0"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "14") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                         (rule "add_literals" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "14"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "cut_direct" (formula "17") (term "0"))
                                                         (branch "CUT: m_0 <= -1 + j_0 TRUE"
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "17"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0"))
                                                            (rule "qeq_literals" (formula "43") (term "0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "30") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "30"))
                                                            (rule "inEqSimp_subsumption0" (formula "18") (term "0") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "18") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "17"))
                                                            (rule "applyEqRigid" (formula "33") (term "0,2,1,1,0") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0,0"))
                                                            (rule "applyEq" (formula "19") (term "0,2,1,1,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "19") (term "1,1,0,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq1" (formula "16"))
                                                            (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                            (rule "add_literals" (formula "16") (term "1,0"))
                                                            (rule "times_zero_1" (formula "16") (term "0"))
                                                            (rule "leq_literals" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "15"))
                                                            (rule "inEqSimp_homoInEq0" (formula "17"))
                                                            (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                            (rule "add_literals" (formula "17") (term "1,0"))
                                                            (rule "times_zero_1" (formula "17") (term "0"))
                                                            (rule "qeq_literals" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "15"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                            (rule "add_literals" (formula "4") (term "0,1"))
                                                            (rule "add_zero_left" (formula "4") (term "1"))
                                                            (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "30") (term "1,1,1,0,0") (ifseqformula "15"))
                                                            (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                                            (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                                            (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                                            (rule "applyEqRigid" (formula "11") (term "0,2,1,1") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "27") (term "0,2,0") (ifseqformula "15"))
                                                            (rule "applyEqRigid" (formula "22") (term "0,2,1") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "8") (term "1") (ifseqformula "15"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "mul_literals" (formula "9") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "allLeft" (formula "13") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                            (rule "replaceKnownSelect_taclet011001_4" (formula "13") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet011001_5" (formula "13") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "13") (term "0,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "13") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "13") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "13") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "13"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0"))
                                                            (rule "add_literals" (formula "13") (term "0"))
                                                            (rule "leq_literals" (formula "13"))
                                                            (rule "closeFalse" (formula "13"))
                                                         )
                                                         (branch "CUT: m_0 <= -1 + j_0 FALSE"
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "inEqSimp_leqRight" (formula "43"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "44"))
                                                            (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                            (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                            (rule "add_literals" (formula "43") (term "0,0"))
                                                            (rule "leq_literals" (formula "43") (term "0"))
                                                             (builtin "One Step Simplification" (formula "43"))
                                                            (rule "false_right" (formula "43"))
                                                            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                            (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                            (rule "add_literals" (formula "16") (term "0,0"))
                                                            (rule "qeq_literals" (formula "16") (term "0"))
                                                             (builtin "One Step Simplification" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "18") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "18"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                                            (rule "replaceKnownSelect_taclet1111010011001_18" (formula "32") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet1111010011001_19" (formula "32") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "32") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_invertInEq1" (formula "32") (term "0,0"))
                                                            (rule "times_zero_2" (formula "32") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "32") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "32") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "allLeft" (formula "20") (inst "t=m_0"))
                                                            (rule "replaceKnownSelect_taclet010011001_10" (formula "20") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "20") (term "0,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "12"))
                                                            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "20") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "20") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "20"))
                                                            (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "9"))
                                                            (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "8"))
                                                            (rule "applyEqRigid" (formula "12") (term "0,2,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0"))
                                                            (rule "add_literals" (formula "12") (term "0"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "closeFalse" (formula "12"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: m_0 >= -1 + j_0 FALSE"
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_geqRight" (formula "43"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                (rule "add_literals" (formula "45") (term "0,0"))
                                                (rule "qeq_literals" (formula "45") (term "0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "false_right" (formula "45"))
                                                (rule "inEqSimp_subsumption0" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0"))
                                                (rule "leq_literals" (formula "29") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_subsumption0" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "8") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "cut_direct" (formula "15") (term "0,0"))
                                                (branch "CUT: n_0 <= -1 TRUE"
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "15"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                                (branch "CUT: n_0 <= -1 FALSE"
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "42"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "inEqSimp_leqRight" (formula "42"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "6"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "cut_direct" (formula "25") (term "0"))
                                                   (branch "CUT: n_0 <= -2 + j_0 TRUE"
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "25"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0"))
                                                      (rule "qeq_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_subsumption0" (formula "26") (term "0") (ifseqformula "25"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "26") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "25"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "29"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "allLeft" (formula "32") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet1010011001_14" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,1,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "32") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "32") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_homoInEq0" (formula "32") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1"))
                                                      (rule "add_literals" (formula "32") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "32") (term "0,1"))
                                                      (rule "qeq_literals" (formula "32") (term "1"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "31") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet1010011001_14" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "31"))
                                                      (rule "allLeft" (formula "32") (inst "t=n_0"))
                                                      (rule "replaceKnownSelect_taclet010011001_12" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010011001_13" (formula "32") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "32"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "allLeft" (formula "19") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet010011001_10" (formula "19") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "19") (term "0,1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "19") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "19"))
                                                      (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20"))
                                                      (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "0"))
                                                      (rule "qeq_literals" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "0"))
                                                      (rule "leq_literals" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "8"))
                                                      (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "26") (term "0,2,0") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0"))
                                                      (rule "add_literals" (formula "12") (term "0"))
                                                      (rule "qeq_literals" (formula "12"))
                                                      (rule "closeFalse" (formula "12"))
                                                   )
                                                   (branch "CUT: n_0 <= -2 + j_0 FALSE"
                                                       (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_leqRight" (formula "43"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "33") (inst "t=m_0"))
                                                      (rule "replaceKnownSelect_taclet1010011001_14" (formula "33") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "33") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "33") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_homoInEq0" (formula "33") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1"))
                                                      (rule "add_literals" (formula "33") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "33") (term "0,1"))
                                                      (rule "qeq_literals" (formula "33") (term "1"))
                                                       (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "cut_direct" (formula "26") (term "0"))
                                                      (branch "CUT: n_0 <= -1 + j_0 TRUE"
                                                          (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "inEqSimp_contradEq3" (formula "43") (ifseqformula "26"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0"))
                                                         (rule "qeq_literals" (formula "43") (term "0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "inEqSimp_contradInEq0" (formula "30") (term "0") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "26"))
                                                         (rule "applyEqRigid" (formula "20") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                         (rule "add_literals" (formula "14") (term "0,1"))
                                                         (rule "add_zero_left" (formula "14") (term "1"))
                                                         (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                         (rule "add_literals" (formula "8") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "8") (term "0,0"))
                                                         (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24"))
                                                         (rule "applyEq" (formula "30") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "15") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (rule "qeq_literals" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,1,1,0,0"))
                                                         (rule "add_zero_left" (formula "26") (term "1,1,0,0"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "0"))
                                                         (rule "leq_literals" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "9"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                         (rule "mul_literals" (formula "14") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0"))
                                                         (rule "qeq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "qeq_literals" (formula "9") (term "0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "13"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "inEqSimp_homoInEq1" (formula "11"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0"))
                                                         (rule "add_literals" (formula "11") (term "0"))
                                                         (rule "leq_literals" (formula "11"))
                                                         (rule "closeFalse" (formula "11"))
                                                      )
                                                      (branch "CUT: n_0 <= -1 + j_0 FALSE"
                                                          (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_leqRight" (formula "43"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "44"))
                                                         (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "true_left" (formula "31"))
                                                         (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                         (rule "add_literals" (formula "43") (term "0,0"))
                                                         (rule "leq_literals" (formula "43") (term "0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "false_right" (formula "43"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0"))
                                                         (rule "qeq_literals" (formula "6") (term "0"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "allLeft" (formula "31") (inst "t=m_0"))
                                                         (rule "replaceKnownSelect_taclet1010011001_14" (formula "31") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1010011001_15" (formula "31") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "31") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "31") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "31") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "31"))
                                                         (rule "allLeft" (formula "19") (inst "t=m_0"))
                                                         (rule "replaceKnownSelect_taclet010011001_10" (formula "19") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010011001_11" (formula "19") (term "0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "12"))
                                                         (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "14"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "19") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "19") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "19"))
                                                         (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "9"))
                                                         (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19"))
                                                         (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                         (rule "add_literals" (formula "19") (term "1,0"))
                                                         (rule "times_zero_1" (formula "19") (term "0"))
                                                         (rule "qeq_literals" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "8"))
                                                         (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "8"))
                                                         (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                         (rule "add_literals" (formula "8") (term "1,0"))
                                                         (rule "times_zero_1" (formula "8") (term "0"))
                                                         (rule "leq_literals" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "applyEqRigid" (formula "22") (term "0,2,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22"))
                                                         (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                                         (rule "add_literals" (formula "22") (term "1,0"))
                                                         (rule "times_zero_1" (formula "22") (term "0"))
                                                         (rule "leq_literals" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "7"))
                                                         (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "7"))
                                                         (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "11"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "11") (term "1,0"))
                                                         (rule "add_literals" (formula "11") (term "0"))
                                                         (rule "qeq_literals" (formula "11"))
                                                         (rule "closeFalse" (formula "11"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "20") (inst "sk=f_0"))
                           (rule "allRight" (formula "20") (inst "sk=o_0"))
                           (rule "orRight" (formula "20"))
                           (rule "orRight" (formula "20"))
                           (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "eqSymm" (formula "23"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "23")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "19"))
                              (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "25"))
                              (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "18")))
                              (rule "closeTrue" (formula "24"))
                           )
                           (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_LOOP_0<<anonHeapFunction>> = TRUE) FALSE"
                              (rule "close" (formula "24") (ifseqformula "1"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_3 = null)"
                     (rule "false_right" (formula "21"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_3 != null, but j Out of Bounds!)"
                     (rule "false_right" (formula "21"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
               )
               (branch "Null Reference (x_arr_2 = null)"
                   (builtin "One Step Simplification" (formula "21"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_2 != null, but x_10 Out of Bounds!)"
                  (rule "false_right" (formula "21"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "add_zero_left" (formula "1") (term "0,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0,1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                  (rule "mul_literals" (formula "7") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                  (rule "andLeft" (formula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0"))
                  (rule "add_zero_right" (formula "7") (term "0"))
                  (rule "leq_literals" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
            )
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "15"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "12"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
         (rule "applyEq" (formula "16") (term "1,0,1,1,0") (ifseqformula "3"))
         (rule "polySimp_pullOutFactor2" (formula "16") (term "0,1,1,0"))
         (rule "add_literals" (formula "16") (term "1,0,1,1,0"))
         (rule "times_zero_1" (formula "16") (term "0,1,1,0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
         (rule "applyEq" (formula "4") (term "1,1,0,0,0,0") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "4"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "3"))
         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
         (rule "add_literals" (formula "3") (term "1,0"))
         (rule "times_zero_1" (formula "3") (term "0"))
         (rule "leq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "blockBreak" (formula "13") (term "1"))
         (rule "lsBreak" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "tryEmpty" (formula "13") (term "1"))
         (rule "emptyModality" (formula "13") (term "1"))
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "4")))
         (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "1,1,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "1,0,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "1,1,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "1,0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "0,1,1,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "0,1,1,0,0,0,0,0"))
         (rule "eqSymm" (formula "13") (term "1,0,0,1"))
         (rule "applyEq" (formula "13") (term "1,1,0,0,0,0,0") (ifseqformula "2"))
         (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "4") (term "0") (ifseqformula "8"))
         (rule "replaceKnownSelect_taclet1_0" (formula "4") (term "1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "4") (term "1,0"))
         (rule "array2seqDef" (formula "4") (term "0") (inst "u=u"))
         (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "2"))
         (rule "JML_represents_clause_for_com_key_InsertionSort_seqa" (formula "4") (term "1") (ifseqformula "8"))
         (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "4") (term "2,1") (ifseqformula "6") (ifseqformula "12"))
         (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
         (rule "Class_invariant_axiom_for_com_key_InsertionSort" (formula "10") (ifseqformula "8"))
         (rule "notLeft" (formula "10"))
         (rule "Class_invariant_axiom_for_com_key_InsertionSort" (formula "12") (term "1,0") (ifseqformula "8"))
         (rule "replaceKnownSelect_taclet1_0" (formula "12") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "12") (term "0,0,1,0"))
         (rule "replace_known_right" (formula "12") (term "0,1,0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "andRight" (formula "12"))
         (branch "Case 1"
            (rule "allRight" (formula "12") (inst "sk=n_0"))
            (rule "allRight" (formula "12") (inst "sk=m_0"))
            (rule "orRight" (formula "12"))
            (rule "orRight" (formula "12"))
            (rule "orRight" (formula "12"))
            (rule "inEqSimp_geqRight" (formula "15"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_geqRight" (formula "15"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "15"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "15"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1"))
            (rule "polySimp_elimOne" (formula "2") (term "1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnon" (formula "4"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnon" (formula "4"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "9") (inst "t=n_0"))
            (rule "replaceKnownSelect_taclet0101_2" (formula "9") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0101_3" (formula "9") (term "0,1,0"))
            (rule "inEqSimp_commuteGeq" (formula "9") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0,0,0") (ifseqformula "5"))
            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
            (rule "leq_literals" (formula "9") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "allLeft" (formula "9") (inst "t=m_0"))
            (rule "replaceKnownSelect_taclet0101_4" (formula "9") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0101_5" (formula "9") (term "0,1"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "1"))
            (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0"))
            (rule "inEqSimp_contradInEq0" (formula "9") (term "1") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
            (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "9") (term "0,0,1"))
            (rule "leq_literals" (formula "9") (term "0,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "4"))
            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
            (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "9") (term "0,0,1"))
            (rule "leq_literals" (formula "9") (term "0,1"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "9"))
            (rule "qeq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "12") (inst "sk=f_0"))
            (rule "allRight" (formula "12") (inst "sk=o_0"))
            (rule "orRight" (formula "12"))
            (rule "orRight" (formula "12"))
            (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
            (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "closeTrue" (formula "15"))
         )
      )
   )
   (branch "Null Reference (x_arr = null)"
      (rule "false_right" (formula "15"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
